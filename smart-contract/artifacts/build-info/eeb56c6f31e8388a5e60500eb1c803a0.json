{
	"id": "eeb56c6f31e8388a5e60500eb1c803a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"EthGlobal/smart-contract/example6551.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\";\r\nimport \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\";\r\nimport \"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\";\r\n\r\ncontract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {\r\n    receive() external payable {}\r\n\r\n    uint256 public nonce;\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory result) {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n\r\n        bool success;\r\n        (success, result) = to.call{value: value}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function token()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 chainId,\r\n            address tokenContract,\r\n            uint256 tokenId\r\n        )\r\n    {\r\n        uint256 length = address(this).code.length;\r\n        return\r\n            abi.decode(\r\n                Bytecode.codeAt(address(this), length - 0x60, length),\r\n                (uint256, address, uint256)\r\n            );\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\r\n            .token();\r\n        if (chainId != block.chainid) return address(0);\r\n\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\r\n        return (interfaceId == type(IERC165).interfaceId ||\r\n            interfaceId == type(IERC6551Account).interfaceId);\r\n    }\r\n\r\n    function isValidSignature(bytes32 hash, bytes memory signature)\r\n        external\r\n        view\r\n        returns (bytes4 magicValue)\r\n    {\r\n        bool isValid = SignatureChecker.isValidSignatureNow(\r\n            owner(),\r\n            hash,\r\n            signature\r\n        );\r\n\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}"
			},
			"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC6551AccountProxy {\n    function implementation() external view returns (address);\n}\n\n/// @dev the ERC-165 identifier for this interface is `0xeff4d378`\ninterface IERC6551Account {\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\n\n    receive() external payable;\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    function token()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    function owner() external view returns (address);\n\n    function nonce() external view returns (uint256);\n}\n"
			},
			"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nlibrary Bytecode {\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\n\n  /**\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\n    @param _code The returning value of the resulting `creationCode`\n    @return creationCode (constructor) for new contract\n  */\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\n    /*\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\n      0x01    0x80         0x80        DUP1                size size\n      0x02    0x60         0x600e      PUSH1 14            14 size size\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\n      0x04    0x39         0x39        CODECOPY            size\n      0x05    0x60         0x6000      PUSH1 00            0 size\n      0x06    0xf3         0xf3        RETURN\n      <CODE>\n    */\n\n    return abi.encodePacked(\n      hex\"63\",\n      uint32(_code.length),\n      hex\"80_60_0E_60_00_39_60_00_F3\",\n      _code\n    );\n  }\n\n  /**\n    @notice Returns the size of the code on a given address\n    @param _addr Address that may or may not contain code\n    @return size of the code on the given `_addr`\n  */\n  function codeSize(address _addr) internal view returns (uint256 size) {\n    assembly { size := extcodesize(_addr) }\n  }\n\n  /**\n    @notice Returns the code of a given address\n    @dev It will fail if `_end < _start`\n    @param _addr Address that may or may not contain code\n    @param _start number of bytes of code to skip on read\n    @param _end index before which to end extraction\n    @return oCode read from `_addr` deployed bytecode\n\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\n  */\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\n    uint256 csize = codeSize(_addr);\n    if (csize == 0) return bytes(\"\");\n\n    if (_start > csize) return bytes(\"\");\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \n\n    unchecked {\n      uint256 reqSize = _end - _start;\n      uint256 maxSize = csize - _start;\n\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\n\n      assembly {\n        // allocate output byte array - this could also be done without assembly\n        // by using o_code = new bytes(size)\n        oCode := mload(0x40)\n        // new \"memory end\" including padding\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n        // store length in memory\n        mstore(oCode, size)\n        // actually retrieve the code, this needs assembly\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\n      }\n    }\n  }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./ECDSA.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 400
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"EthGlobal/smart-contract/example6551.sol": {
				"ExampleERC6551Account": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_size",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_end",
									"type": "uint256"
								}
							],
							"name": "InvalidCodeAtRange",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EthGlobal/smart-contract/example6551.sol\":718:2618  contract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"EthGlobal/smart-contract/example6551.sol\":718:2618  contract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5d4c49\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1626ba7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"EthGlobal/smart-contract/example6551.sol\":2001:2208  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":2001:2208  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EthGlobal/smart-contract/example6551.sol\":2216:2615  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1785:1818   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1767:1819   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1740:1758   */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":2216:2615  function isValidSignature(bytes32 hash, bytes memory signature)... */\n      tag_17\n        /* \"#utility.yul\":1623:1825   */\n      jump\n        /* \"EthGlobal/smart-contract/example6551.sol\":1724:1993  function owner() public view returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1994:2049   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1976:2050   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1964:1966   */\n      0x20\n        /* \"#utility.yul\":1949:1967   */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":1724:1993  function owner() public view returns (address) {... */\n      tag_17\n        /* \"#utility.yul\":1830:2056   */\n      jump\n        /* \"EthGlobal/smart-contract/example6551.sol\":860:1294  function executeCall(... */\n    tag_6:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"EthGlobal/smart-contract/example6551.sol\":831:851  uint256 public nonce */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      sload(0x00)\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":3917:3942   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3905:3907   */\n      0x20\n        /* \"#utility.yul\":3890:3908   */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":831:851  uint256 public nonce */\n      tag_17\n        /* \"#utility.yul\":3771:3948   */\n      jump\n        /* \"EthGlobal/smart-contract/example6551.sol\":1302:1716  function token()... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4155:4180   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4216:4271   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4211:4213   */\n      0x20\n        /* \"#utility.yul\":4196:4214   */\n      dup5\n      add\n        /* \"#utility.yul\":4189:4272   */\n      mstore\n        /* \"#utility.yul\":4288:4306   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4281:4315   */\n      mstore\n        /* \"#utility.yul\":4143:4145   */\n      0x60\n        /* \"#utility.yul\":4128:4146   */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":1302:1716  function token()... */\n      tag_17\n        /* \"#utility.yul\":3953:4321   */\n      jump\n        /* \"EthGlobal/smart-contract/example6551.sol\":2001:2208  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_16:\n        /* \"EthGlobal/smart-contract/example6551.sol\":2069:2073  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"EthGlobal/smart-contract/example6551.sol\":2094:2134  interfaceId == type(IERC165).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":2094:2199  interfaceId == type(IERC165).interfaceId ||... */\n      tag_48\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"EthGlobal/smart-contract/example6551.sol\":2151:2199  interfaceId == type(IERC6551Account).interfaceId */\n      dup3\n      and\n      shl(0xe3, 0x08014073)\n      eq\n        /* \"EthGlobal/smart-contract/example6551.sol\":2094:2199  interfaceId == type(IERC165).interfaceId ||... */\n    tag_48:\n        /* \"EthGlobal/smart-contract/example6551.sol\":2086:2200  return (interfaceId == type(IERC165).interfaceId ||... */\n      swap3\n        /* \"EthGlobal/smart-contract/example6551.sol\":2001:2208  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"EthGlobal/smart-contract/example6551.sol\":2216:2615  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_23:\n        /* \"EthGlobal/smart-contract/example6551.sol\":2330:2347  bytes4 magicValue */\n      0x00\n        /* \"EthGlobal/smart-contract/example6551.sol\":2365:2377  bool isValid */\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":2380:2492  SignatureChecker.isValidSignatureNow(... */\n      tag_50\n        /* \"EthGlobal/smart-contract/example6551.sol\":2431:2438  owner() */\n      tag_51\n        /* \"EthGlobal/smart-contract/example6551.sol\":2431:2436  owner */\n      tag_28\n        /* \"EthGlobal/smart-contract/example6551.sol\":2431:2438  owner() */\n      jump\t// in\n    tag_51:\n        /* \"EthGlobal/smart-contract/example6551.sol\":2453:2457  hash */\n      dup6\n        /* \"EthGlobal/smart-contract/example6551.sol\":2472:2481  signature */\n      dup6\n        /* \"EthGlobal/smart-contract/example6551.sol\":2380:2416  SignatureChecker.isValidSignatureNow */\n      tag_52\n        /* \"EthGlobal/smart-contract/example6551.sol\":2380:2492  SignatureChecker.isValidSignatureNow(... */\n      jump\t// in\n    tag_50:\n        /* \"EthGlobal/smart-contract/example6551.sol\":2365:2492  bool isValid = SignatureChecker.isValidSignatureNow(... */\n      swap1\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":2509:2516  isValid */\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":2505:2586  if (isValid) {... */\n      iszero\n      tag_53\n      jumpi\n      pop\n      shl(0xe1, 0x0b135d3f)\n        /* \"EthGlobal/smart-contract/example6551.sol\":2540:2574  IERC1271.isValidSignature.selector */\n      swap1\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":2533:2574  return IERC1271.isValidSignature.selector */\n      jump(tag_48)\n        /* \"EthGlobal/smart-contract/example6551.sol\":2505:2586  if (isValid) {... */\n    tag_53:\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":2598:2607  return \"\" */\n      0x00\n      swap4\n        /* \"EthGlobal/smart-contract/example6551.sol\":2216:2615  function isValidSignature(bytes32 hash, bytes memory signature)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"EthGlobal/smart-contract/example6551.sol\":1724:1993  function owner() public view returns (address) {... */\n    tag_28:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1762:1769  address */\n      0x00\n        /* \"EthGlobal/smart-contract/example6551.sol\":1783:1798  uint256 chainId */\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1800:1821  address tokenContract */\n      0x00\n        /* \"EthGlobal/smart-contract/example6551.sol\":1823:1838  uint256 tokenId */\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1842:1846  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EthGlobal/smart-contract/example6551.sol\":1842:1866  this... */\n      and\n      0xfc0c546a\n        /* \"EthGlobal/smart-contract/example6551.sol\":1842:1868  this... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1782:1868  (uint256 chainId, address tokenContract, uint256 tokenId) = this... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":1894:1907  block.chainid */\n      chainid\n        /* \"EthGlobal/smart-contract/example6551.sol\":1883:1890  chainId */\n      dup4\n        /* \"EthGlobal/smart-contract/example6551.sol\":1883:1907  chainId != block.chainid */\n      eq\n        /* \"EthGlobal/smart-contract/example6551.sol\":1879:1926  if (chainId != block.chainid) return address(0) */\n      tag_59\n      jumpi\n        /* \"EthGlobal/smart-contract/example6551.sol\":1924:1925  0 */\n      0x00\n        /* \"EthGlobal/smart-contract/example6551.sol\":1909:1926  return address(0) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":1724:1993  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"EthGlobal/smart-contract/example6551.sol\":1879:1926  if (chainId != block.chainid) return address(0) */\n    tag_59:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1946:1985  IERC721(tokenContract).ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3917:3942   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EthGlobal/smart-contract/example6551.sol\":1946:1976  IERC721(tokenContract).ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":3890:3908   */\n      0x24\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":1946:1985  IERC721(tokenContract).ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1939:1985  return IERC721(tokenContract).ownerOf(tokenId) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":1724:1993  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"EthGlobal/smart-contract/example6551.sol\":860:1294  function executeCall(... */\n    tag_34:\n        /* \"EthGlobal/smart-contract/example6551.sol\":989:1008  bytes memory result */\n      0x60\n        /* \"EthGlobal/smart-contract/example6551.sol\":1043:1050  owner() */\n      tag_66\n        /* \"EthGlobal/smart-contract/example6551.sol\":1043:1048  owner */\n      tag_28\n        /* \"EthGlobal/smart-contract/example6551.sol\":1043:1050  owner() */\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EthGlobal/smart-contract/example6551.sol\":1029:1050  msg.sender == owner() */\n      and\n        /* \"EthGlobal/smart-contract/example6551.sol\":1029:1039  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EthGlobal/smart-contract/example6551.sol\":1029:1050  msg.sender == owner() */\n      and\n      eq\n        /* \"EthGlobal/smart-contract/example6551.sol\":1021:1070  require(msg.sender == owner(), \"Not token owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5162:5164   */\n      0x20\n        /* \"EthGlobal/smart-contract/example6551.sol\":1021:1070  require(msg.sender == owner(), \"Not token owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5144:5165   */\n      mstore\n        /* \"#utility.yul\":5201:5203   */\n      0x0f\n        /* \"#utility.yul\":5181:5199   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5174:5204   */\n      mstore\n      shl(0x89, 0x2737ba103a37b5b2b71037bbb732b9)\n        /* \"#utility.yul\":5220:5238   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5213:5258   */\n      mstore\n        /* \"#utility.yul\":5275:5293   */\n      0x64\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":1021:1070  require(msg.sender == owner(), \"Not token owner\") */\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1083:1095  bool success */\n      0x00\n        /* \"EthGlobal/smart-contract/example6551.sol\":1126:1128  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EthGlobal/smart-contract/example6551.sol\":1126:1133  to.call */\n      and\n        /* \"EthGlobal/smart-contract/example6551.sol\":1141:1146  value */\n      dup6\n        /* \"EthGlobal/smart-contract/example6551.sol\":1148:1152  data */\n      dup6\n      dup6\n        /* \"EthGlobal/smart-contract/example6551.sol\":1126:1153  to.call{value: value}(data) */\n      mload(0x40)\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_74\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_73)\n    tag_74:\n      0x60\n      swap2\n      pop\n    tag_73:\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":1106:1153  (success, result) = to.call{value: value}(data) */\n      swap3\n      pop\n      swap1\n      pop\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1166:1287  if (!success) {... */\n      tag_75\n      jumpi\n        /* \"EthGlobal/smart-contract/example6551.sol\":1253:1259  result */\n      dup2\n        /* \"EthGlobal/smart-contract/example6551.sol\":1247:1260  mload(result) */\n      mload\n        /* \"EthGlobal/smart-contract/example6551.sol\":1242:1244  32 */\n      0x20\n        /* \"EthGlobal/smart-contract/example6551.sol\":1234:1240  result */\n      dup4\n        /* \"EthGlobal/smart-contract/example6551.sol\":1230:1245  add(result, 32) */\n      add\n        /* \"EthGlobal/smart-contract/example6551.sol\":1223:1261  revert(add(result, 32), mload(result)) */\n      revert\n        /* \"EthGlobal/smart-contract/example6551.sol\":1166:1287  if (!success) {... */\n    tag_75:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1010:1294  {... */\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":860:1294  function executeCall(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"EthGlobal/smart-contract/example6551.sol\":1302:1716  function token()... */\n    tag_44:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1383:1398  uint256 chainId */\n      0x00\n      dup1\n      dup1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1517:1521  this */\n      address\n        /* \"EthGlobal/smart-contract/example6551.sol\":1509:1534  address(this).code.length */\n      dup1\n      extcodesize\n      swap1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1594:1647  Bytecode.codeAt(address(this), length - 0x60, length) */\n      tag_77\n      swap1\n        /* \"EthGlobal/smart-contract/example6551.sol\":1625:1638  length - 0x60 */\n      tag_78\n        /* \"EthGlobal/smart-contract/example6551.sol\":1634:1638  0x60 */\n      0x60\n        /* \"EthGlobal/smart-contract/example6551.sol\":1509:1534  address(this).code.length */\n      dup5\n        /* \"EthGlobal/smart-contract/example6551.sol\":1625:1638  length - 0x60 */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1640:1646  length */\n      dup4\n        /* \"EthGlobal/smart-contract/example6551.sol\":1594:1609  Bytecode.codeAt */\n      tag_80\n        /* \"EthGlobal/smart-contract/example6551.sol\":1594:1647  Bytecode.codeAt(address(this), length - 0x60, length) */\n      jump\t// in\n    tag_77:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1565:1708  abi.decode(... */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_81:\n        /* \"EthGlobal/smart-contract/example6551.sol\":1545:1708  return... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"EthGlobal/smart-contract/example6551.sol\":1302:1716  function token()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1015:1383  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1121:1125  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1138:1155  address recovered */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1157:1181  ECDSA.RecoverError error */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1187:1220  ECDSA.tryRecover(hash, signature) */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1204:1208  hash */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1210:1219  signature */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1187:1203  ECDSA.tryRecover */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1187:1220  ECDSA.tryRecover(hash, signature) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1137:1220  (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1259:1285  ECDSA.RecoverError.NoError */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1250:1255  error */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1250:1285  error == ECDSA.RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_90\n      jumpi\n      tag_90\n      tag_88\n      jump\t// in\n    tag_90:\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1250:1308  error == ECDSA.RecoverError.NoError && recovered == signer */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1302:1308  signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1289:1308  recovered == signer */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1289:1298  recovered */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1289:1308  recovered == signer */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1250:1308  error == ECDSA.RecoverError.NoError && recovered == signer */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1249:1376  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n      dup1\n      tag_93\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1325:1376  isValidERC1271SignatureNow(signer, hash, signature) */\n      tag_93\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1352:1358  signer */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1360:1364  hash */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1366:1375  signature */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1325:1351  isValidERC1271SignatureNow */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1325:1376  isValidERC1271SignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1230:1376  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1015:1383  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n    tag_83:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1793:2739  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {... */\n    tag_80:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1877:1895  bytes memory oCode */\n      0x60\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1356:1374  extcodesize(_addr) */\n      dup4\n      extcodesize\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1903:1916  uint256 csize */\n      0x00\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1944:1954  csize == 0 */\n      dup2\n      swap1\n      sub\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1940:1972  if (csize == 0) return bytes(\"\") */\n      tag_98\n      jumpi\n      pop\n      pop\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1963:1972  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1956:1972  return bytes(\"\") */\n      jump(tag_83)\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1940:1972  if (csize == 0) return bytes(\"\") */\n    tag_98:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1992:1997  csize */\n      dup1\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1983:1989  _start */\n      dup5\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1983:1997  _start > csize */\n      gt\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1979:2015  if (_start > csize) return bytes(\"\") */\n      iszero\n      tag_99\n      jumpi\n      pop\n      pop\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2006:2015  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1999:2015  return bytes(\"\") */\n      jump(tag_83)\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1979:2015  if (_start > csize) return bytes(\"\") */\n    tag_99:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2032:2038  _start */\n      dup4\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2025:2029  _end */\n      dup4\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2025:2038  _end < _start */\n      lt\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2021:2086  if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end) */\n      iszero\n      tag_100\n      jumpi\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2047:2086  InvalidCodeAtRange(csize, _start, _end) */\n      mload(0x40)\n      shl(0xe1, 0x162544fd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6530:6555   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6571:6589   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6564:6598   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6614:6632   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6607:6641   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6503:6521   */\n      0x64\n      add\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2047:2086  InvalidCodeAtRange(csize, _start, _end) */\n      tag_68\n        /* \"#utility.yul\":6328:6647   */\n      jump\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2021:2086  if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end) */\n    tag_100:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2130:2143  _end - _start */\n      dup4\n      dup4\n      sub\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2169:2183  csize - _start */\n      dup5\n      dup3\n      sub\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2112:2127  uint256 reqSize */\n      0x00\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2207:2224  maxSize < reqSize */\n      dup3\n      dup3\n      lt\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n      tag_103\n      jumpi\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2237:2244  reqSize */\n      dup3\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n      jump(tag_104)\n    tag_103:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2227:2234  maxSize */\n      dup2\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n    tag_104:\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2413:2417  0x40 */\n      0x40\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2407:2418  mload(0x40) */\n      dup1\n      mload\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2501:2527  add(add(size, 0x20), 0x1f) */\n      0x3f\n      dup4\n      add\n      not(0x1f)\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2497:2539  and(add(add(size, 0x20), 0x1f), not(0x1f)) */\n      and\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2486:2540  add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))) */\n      dup2\n      add\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2473:2541  mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f)))) */\n      swap1\n      swap2\n      mstore\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2584:2603  mstore(oCode, size) */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2407:2418  mload(0x40) */\n      swap6\n      pop\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2192:2244  uint256 size = maxSize < reqSize ? maxSize : reqSize */\n      swap1\n      pop\n      dup1\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2708:2714  _start */\n      dup8\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2515:2519  0x20 */\n      0x20\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2690:2706  add(oCode, 0x20) */\n      dup8\n      add\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2683:2688  _addr */\n      dup11\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2671:2721  extcodecopy(_addr, add(oCode, 0x20), _start, size) */\n      extcodecopy\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":2262:2729  {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1897:2739  {... */\n      pop\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":1793:2739  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2483:3249  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2564:2571  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2573:2585  RecoverError */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2587:2594  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2610:2619  signature */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2610:2626  signature.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2630:2632  65 */\n      0x41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2610:2632  signature.length == 65 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2606:3243  if (signature.length == 65) {... */\n      tag_106\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2946:2950  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2931:2951  add(signature, 0x20) */\n      dup5\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2925:2952  mload(add(signature, 0x20)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2995:2999  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2980:3000  add(signature, 0x40) */\n      dup6\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2974:3001  mload(add(signature, 0x40)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3052:3056  0x60 */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3037:3057  add(signature, 0x60) */\n      dup7\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3031:3058  mload(add(signature, 0x60)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2648:2657  bytes32 r */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3023:3059  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3093:3118  tryRecover(hash, v, r, s) */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3104:3108  hash */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3023:3059  byte(0, mload(add(signature, 0x60))) */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2925:2952  mload(add(signature, 0x20)) */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2974:3001  mload(add(signature, 0x40)) */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3093:3103  tryRecover */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3093:3118  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3086:3118  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_109)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2606:3243  if (signature.length == 65) {... */\n    tag_106:\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3214:3230  signature.length */\n      dup2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3165:3166  0 */\n      0x00\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":3169:3204  RecoverError.InvalidSignatureLength */\n      0x02\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2606:3243  if (signature.length == 65) {... */\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":2483:3249  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1789:2247  function isValidERC1271SignatureNow(... */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1932:1936  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1949:1961  bool success */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1963:1982  bytes memory result */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1986:1992  signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1986:2003  signer.staticcall */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2060:2064  hash */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2066:2075  signature */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2017:2077  abi.encodeCall(IERC1271.isValidSignature, (hash, signature)) */\n      add(0x24, mload(0x40))\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      shl(0xe1, 0x0b135d3f)\n      or\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1986:2087  signer.staticcall(... */\n      mload\n      tag_113\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2017:2077  abi.encodeCall(IERC1271.isValidSignature, (hash, signature)) */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1986:2087  signer.staticcall(... */\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_117\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_116)\n    tag_117:\n      0x60\n      swap2\n      pop\n    tag_116:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1948:2087  (bool success, bytes memory result) = signer.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2105:2112  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2105:2147  success &&... */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2145:2147  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2128:2134  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2128:2141  result.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2128:2147  result.length >= 32 */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2105:2147  success &&... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2105:2239  success &&... */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2163:2192  abi.decode(result, (bytes32)) */\n      dup1\n      mload\n      shl(0xe1, 0x0b135d3f)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2204:2238  IERC1271.isValidSignature.selector */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2163:2192  abi.decode(result, (bytes32)) */\n      tag_120\n      swap1\n      dup4\n      add\n      0x20\n      swap1\n      dup2\n      add\n      swap1\n      dup5\n      add\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":2163:2239  abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector) */\n      eq\n      swap7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":1789:2247  function isValidERC1271SignatureNow(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":5591:7121  function tryRecover(... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":5717:5724  address */\n      0x00\n      dup1\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6650:6716  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6637:6716  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6633:6797  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6748:6749  0 */\n      0x00\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6752:6782  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6784:6785  s */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6732:6786  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_123)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6633:6797  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6908:6932  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6891:6905  address signer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6908:6932  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7653:7678   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7726:7730   */\n      0xff\n        /* \"#utility.yul\":7714:7731   */\n      dup10\n      and\n        /* \"#utility.yul\":7694:7712   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":7687:7732   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7748:7766   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":7741:7775   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":7791:7809   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":7784:7818   */\n      dup7\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6908:6932  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7625:7644   */\n      0xa0\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6908:6932  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6946:6966  signer == address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6942:7055  if (signer == address(0)) {... */\n      tag_129\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6998:6999  0 */\n      0x00\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":7002:7031  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6998:6999  0 */\n      dup3\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6982:7044  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_123)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":6942:7055  if (signer == address(0)) {... */\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":7073:7079  signer */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":7081:7101  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":5591:7121  function tryRecover(... */\n    tag_123:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_15:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_136:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:624   */\n    tag_130:\n        /* \"#utility.yul\":558:568   */\n      0x4e487b71\n        /* \"#utility.yul\":553:556   */\n      0xe0\n        /* \"#utility.yul\":549:569   */\n      shl\n        /* \"#utility.yul\":546:547   */\n      0x00\n        /* \"#utility.yul\":539:570   */\n      mstore\n        /* \"#utility.yul\":589:593   */\n      0x41\n        /* \"#utility.yul\":586:587   */\n      0x04\n        /* \"#utility.yul\":579:594   */\n      mstore\n        /* \"#utility.yul\":613:617   */\n      0x24\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:618   */\n      revert\n        /* \"#utility.yul\":629:1618   */\n    tag_22:\n        /* \"#utility.yul\":706:712   */\n      0x00\n        /* \"#utility.yul\":714:720   */\n      dup1\n        /* \"#utility.yul\":767:769   */\n      0x40\n        /* \"#utility.yul\":755:764   */\n      dup4\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":742:765   */\n      sub\n        /* \"#utility.yul\":738:770   */\n      slt\n        /* \"#utility.yul\":735:787   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":735:787   */\n    tag_141:\n        /* \"#utility.yul\":819:828   */\n      dup3\n        /* \"#utility.yul\":806:829   */\n      calldataload\n        /* \"#utility.yul\":796:829   */\n      swap2\n      pop\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":869:878   */\n      dup4\n        /* \"#utility.yul\":865:883   */\n      add\n        /* \"#utility.yul\":852:884   */\n      calldataload\n        /* \"#utility.yul\":903:921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":944:946   */\n      dup1\n        /* \"#utility.yul\":936:942   */\n      dup3\n        /* \"#utility.yul\":933:947   */\n      gt\n        /* \"#utility.yul\":930:964   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":957:958   */\n      dup1\n        /* \"#utility.yul\":950:962   */\n      revert\n        /* \"#utility.yul\":930:964   */\n    tag_142:\n        /* \"#utility.yul\":998:1004   */\n      dup2\n        /* \"#utility.yul\":987:996   */\n      dup6\n        /* \"#utility.yul\":983:1005   */\n      add\n        /* \"#utility.yul\":973:1005   */\n      swap2\n      pop\n        /* \"#utility.yul\":1043:1050   */\n      dup6\n        /* \"#utility.yul\":1036:1040   */\n      0x1f\n        /* \"#utility.yul\":1032:1034   */\n      dup4\n        /* \"#utility.yul\":1028:1041   */\n      add\n        /* \"#utility.yul\":1024:1051   */\n      slt\n        /* \"#utility.yul\":1014:1069   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1065:1066   */\n      0x00\n        /* \"#utility.yul\":1062:1063   */\n      dup1\n        /* \"#utility.yul\":1055:1067   */\n      revert\n        /* \"#utility.yul\":1014:1069   */\n    tag_143:\n        /* \"#utility.yul\":1101:1103   */\n      dup2\n        /* \"#utility.yul\":1088:1104   */\n      calldataload\n        /* \"#utility.yul\":1123:1125   */\n      dup2\n        /* \"#utility.yul\":1119:1121   */\n      dup2\n        /* \"#utility.yul\":1116:1126   */\n      gt\n        /* \"#utility.yul\":1113:1149   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_145\n      tag_130\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1204:1206   */\n      0x40\n        /* \"#utility.yul\":1198:1207   */\n      mload\n        /* \"#utility.yul\":1172:1174   */\n      0x1f\n        /* \"#utility.yul\":1258:1271   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1254:1276   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1278:1280   */\n      0x3f\n        /* \"#utility.yul\":1250:1281   */\n      add\n        /* \"#utility.yul\":1246:1286   */\n      and\n        /* \"#utility.yul\":1234:1287   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1302:1320   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1322:1344   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1299:1345   */\n      or\n        /* \"#utility.yul\":1296:1368   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1348:1366   */\n      tag_147\n      tag_130\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1388:1398   */\n      dup2\n        /* \"#utility.yul\":1384:1386   */\n      0x40\n        /* \"#utility.yul\":1377:1399   */\n      mstore\n        /* \"#utility.yul\":1423:1425   */\n      dup3\n        /* \"#utility.yul\":1415:1421   */\n      dup2\n        /* \"#utility.yul\":1408:1426   */\n      mstore\n        /* \"#utility.yul\":1463:1470   */\n      dup9\n        /* \"#utility.yul\":1458:1460   */\n      0x20\n        /* \"#utility.yul\":1453:1455   */\n      dup5\n        /* \"#utility.yul\":1449:1451   */\n      dup8\n        /* \"#utility.yul\":1445:1456   */\n      add\n        /* \"#utility.yul\":1441:1461   */\n      add\n        /* \"#utility.yul\":1438:1471   */\n      gt\n        /* \"#utility.yul\":1435:1488   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1484:1485   */\n      0x00\n        /* \"#utility.yul\":1481:1482   */\n      dup1\n        /* \"#utility.yul\":1474:1486   */\n      revert\n        /* \"#utility.yul\":1435:1488   */\n    tag_148:\n        /* \"#utility.yul\":1540:1542   */\n      dup3\n        /* \"#utility.yul\":1535:1537   */\n      0x20\n        /* \"#utility.yul\":1531:1533   */\n      dup7\n        /* \"#utility.yul\":1527:1538   */\n      add\n        /* \"#utility.yul\":1522:1524   */\n      0x20\n        /* \"#utility.yul\":1514:1520   */\n      dup4\n        /* \"#utility.yul\":1510:1525   */\n      add\n        /* \"#utility.yul\":1497:1543   */\n      calldatacopy\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1580:1582   */\n      0x20\n        /* \"#utility.yul\":1575:1577   */\n      dup5\n        /* \"#utility.yul\":1567:1573   */\n      dup4\n        /* \"#utility.yul\":1563:1578   */\n      add\n        /* \"#utility.yul\":1559:1583   */\n      add\n        /* \"#utility.yul\":1552:1587   */\n      mstore\n        /* \"#utility.yul\":1606:1612   */\n      dup1\n        /* \"#utility.yul\":1596:1612   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":629:1618   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2061:2215   */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2140:2145   */\n      dup2\n        /* \"#utility.yul\":2136:2190   */\n      and\n        /* \"#utility.yul\":2129:2134   */\n      dup2\n        /* \"#utility.yul\":2126:2191   */\n      eq\n        /* \"#utility.yul\":2116:2209   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2205:2206   */\n      0x00\n        /* \"#utility.yul\":2202:2203   */\n      dup1\n        /* \"#utility.yul\":2195:2207   */\n      revert\n        /* \"#utility.yul\":2116:2209   */\n    tag_152:\n        /* \"#utility.yul\":2061:2215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2220:3014   */\n    tag_33:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2316:2322   */\n      dup1\n        /* \"#utility.yul\":2324:2330   */\n      0x00\n        /* \"#utility.yul\":2332:2338   */\n      dup1\n        /* \"#utility.yul\":2385:2387   */\n      0x60\n        /* \"#utility.yul\":2373:2382   */\n      dup6\n        /* \"#utility.yul\":2364:2371   */\n      dup8\n        /* \"#utility.yul\":2360:2383   */\n      sub\n        /* \"#utility.yul\":2356:2388   */\n      slt\n        /* \"#utility.yul\":2353:2405   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2398:2399   */\n      dup1\n        /* \"#utility.yul\":2391:2403   */\n      revert\n        /* \"#utility.yul\":2353:2405   */\n    tag_154:\n        /* \"#utility.yul\":2440:2449   */\n      dup5\n        /* \"#utility.yul\":2427:2450   */\n      calldataload\n        /* \"#utility.yul\":2459:2490   */\n      tag_155\n        /* \"#utility.yul\":2484:2489   */\n      dup2\n        /* \"#utility.yul\":2459:2490   */\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2509:2514   */\n      swap4\n      pop\n        /* \"#utility.yul\":2561:2563   */\n      0x20\n        /* \"#utility.yul\":2546:2564   */\n      dup6\n      add\n        /* \"#utility.yul\":2533:2565   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2616:2618   */\n      0x40\n        /* \"#utility.yul\":2601:2619   */\n      dup6\n      add\n        /* \"#utility.yul\":2588:2620   */\n      calldataload\n        /* \"#utility.yul\":2639:2657   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2669:2683   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2666:2700   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2696:2697   */\n      0x00\n        /* \"#utility.yul\":2693:2694   */\n      dup1\n        /* \"#utility.yul\":2686:2698   */\n      revert\n        /* \"#utility.yul\":2666:2700   */\n    tag_156:\n        /* \"#utility.yul\":2734:2740   */\n      dup2\n        /* \"#utility.yul\":2723:2732   */\n      dup8\n        /* \"#utility.yul\":2719:2741   */\n      add\n        /* \"#utility.yul\":2709:2741   */\n      swap2\n      pop\n        /* \"#utility.yul\":2779:2786   */\n      dup8\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2768:2770   */\n      dup4\n        /* \"#utility.yul\":2764:2777   */\n      add\n        /* \"#utility.yul\":2760:2787   */\n      slt\n        /* \"#utility.yul\":2750:2805   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2801:2802   */\n      0x00\n        /* \"#utility.yul\":2798:2799   */\n      dup1\n        /* \"#utility.yul\":2791:2803   */\n      revert\n        /* \"#utility.yul\":2750:2805   */\n    tag_157:\n        /* \"#utility.yul\":2841:2843   */\n      dup2\n        /* \"#utility.yul\":2828:2844   */\n      calldataload\n        /* \"#utility.yul\":2867:2869   */\n      dup2\n        /* \"#utility.yul\":2859:2865   */\n      dup2\n        /* \"#utility.yul\":2856:2870   */\n      gt\n        /* \"#utility.yul\":2853:2887   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2883:2884   */\n      0x00\n        /* \"#utility.yul\":2880:2881   */\n      dup1\n        /* \"#utility.yul\":2873:2885   */\n      revert\n        /* \"#utility.yul\":2853:2887   */\n    tag_158:\n        /* \"#utility.yul\":2928:2935   */\n      dup9\n        /* \"#utility.yul\":2923:2925   */\n      0x20\n        /* \"#utility.yul\":2914:2920   */\n      dup3\n        /* \"#utility.yul\":2910:2912   */\n      dup6\n        /* \"#utility.yul\":2906:2921   */\n      add\n        /* \"#utility.yul\":2902:2926   */\n      add\n        /* \"#utility.yul\":2899:2936   */\n      gt\n        /* \"#utility.yul\":2896:2953   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2946:2947   */\n      dup1\n        /* \"#utility.yul\":2939:2951   */\n      revert\n        /* \"#utility.yul\":2896:2953   */\n    tag_159:\n        /* \"#utility.yul\":2220:3014   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":2980:2982   */\n      0x20\n        /* \"#utility.yul\":2972:2983   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2220:3014   */\n      jump\t// out\n        /* \"#utility.yul\":3019:3269   */\n    tag_132:\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3114:3227   */\n    tag_161:\n        /* \"#utility.yul\":3128:3134   */\n      dup4\n        /* \"#utility.yul\":3125:3126   */\n      dup2\n        /* \"#utility.yul\":3122:3135   */\n      lt\n        /* \"#utility.yul\":3114:3227   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":3204:3215   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3198:3216   */\n      mload\n        /* \"#utility.yul\":3185:3196   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3178:3217   */\n      mstore\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3143:3153   */\n      add\n        /* \"#utility.yul\":3114:3227   */\n      jump(tag_161)\n    tag_163:\n      pop\n      pop\n        /* \"#utility.yul\":3261:3262   */\n      0x00\n        /* \"#utility.yul\":3243:3259   */\n      swap2\n      add\n        /* \"#utility.yul\":3236:3263   */\n      mstore\n        /* \"#utility.yul\":3019:3269   */\n      jump\t// out\n        /* \"#utility.yul\":3274:3544   */\n    tag_133:\n        /* \"#utility.yul\":3315:3318   */\n      0x00\n        /* \"#utility.yul\":3353:3358   */\n      dup2\n        /* \"#utility.yul\":3347:3359   */\n      mload\n        /* \"#utility.yul\":3380:3386   */\n      dup1\n        /* \"#utility.yul\":3375:3378   */\n      dup5\n        /* \"#utility.yul\":3368:3387   */\n      mstore\n        /* \"#utility.yul\":3396:3472   */\n      tag_165\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3458:3462   */\n      0x20\n        /* \"#utility.yul\":3453:3456   */\n      dup7\n        /* \"#utility.yul\":3449:3463   */\n      add\n        /* \"#utility.yul\":3442:3446   */\n      0x20\n        /* \"#utility.yul\":3435:3440   */\n      dup7\n        /* \"#utility.yul\":3431:3447   */\n      add\n        /* \"#utility.yul\":3396:3472   */\n      tag_132\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3526:3528   */\n      0x1f\n        /* \"#utility.yul\":3505:3520   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3501:3530   */\n      and\n        /* \"#utility.yul\":3492:3531   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3533:3537   */\n      0x20\n        /* \"#utility.yul\":3488:3538   */\n      add\n      swap3\n        /* \"#utility.yul\":3274:3544   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3549:3766   */\n    tag_36:\n        /* \"#utility.yul\":3696:3698   */\n      0x20\n        /* \"#utility.yul\":3685:3694   */\n      dup2\n        /* \"#utility.yul\":3678:3699   */\n      mstore\n        /* \"#utility.yul\":3659:3663   */\n      0x00\n        /* \"#utility.yul\":3716:3760   */\n      tag_83\n        /* \"#utility.yul\":3756:3758   */\n      0x20\n        /* \"#utility.yul\":3745:3754   */\n      dup4\n        /* \"#utility.yul\":3741:3759   */\n      add\n        /* \"#utility.yul\":3733:3739   */\n      dup5\n        /* \"#utility.yul\":3716:3760   */\n      tag_133\n      jump\t// in\n        /* \"#utility.yul\":4326:4699   */\n    tag_58:\n        /* \"#utility.yul\":4414:4420   */\n      0x00\n        /* \"#utility.yul\":4422:4428   */\n      dup1\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4483:4485   */\n      0x60\n        /* \"#utility.yul\":4471:4480   */\n      dup5\n        /* \"#utility.yul\":4462:4469   */\n      dup7\n        /* \"#utility.yul\":4458:4481   */\n      sub\n        /* \"#utility.yul\":4454:4486   */\n      slt\n        /* \"#utility.yul\":4451:4503   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4496:4497   */\n      dup1\n        /* \"#utility.yul\":4489:4501   */\n      revert\n        /* \"#utility.yul\":4451:4503   */\n    tag_171:\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4522:4538   */\n      mload\n        /* \"#utility.yul\":4512:4538   */\n      swap3\n      pop\n        /* \"#utility.yul\":4581:4583   */\n      0x20\n        /* \"#utility.yul\":4570:4579   */\n      dup5\n        /* \"#utility.yul\":4566:4584   */\n      add\n        /* \"#utility.yul\":4560:4585   */\n      mload\n        /* \"#utility.yul\":4594:4625   */\n      tag_172\n        /* \"#utility.yul\":4619:4624   */\n      dup2\n        /* \"#utility.yul\":4594:4625   */\n      tag_131\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4644:4649   */\n      dup1\n        /* \"#utility.yul\":4634:4649   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":4689:4691   */\n      0x40\n        /* \"#utility.yul\":4678:4687   */\n      dup5\n        /* \"#utility.yul\":4674:4692   */\n      add\n        /* \"#utility.yul\":4668:4693   */\n      mload\n        /* \"#utility.yul\":4658:4693   */\n      swap1\n      pop\n        /* \"#utility.yul\":4326:4699   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4704:4955   */\n    tag_64:\n        /* \"#utility.yul\":4774:4780   */\n      0x00\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4815:4824   */\n      dup3\n        /* \"#utility.yul\":4806:4813   */\n      dup5\n        /* \"#utility.yul\":4802:4825   */\n      sub\n        /* \"#utility.yul\":4798:4830   */\n      slt\n        /* \"#utility.yul\":4795:4847   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4840:4841   */\n      dup1\n        /* \"#utility.yul\":4833:4845   */\n      revert\n        /* \"#utility.yul\":4795:4847   */\n    tag_174:\n        /* \"#utility.yul\":4875:4884   */\n      dup2\n        /* \"#utility.yul\":4869:4885   */\n      mload\n        /* \"#utility.yul\":4894:4925   */\n      tag_83\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4894:4925   */\n      tag_131\n      jump\t// in\n        /* \"#utility.yul\":5304:5575   */\n    tag_71:\n        /* \"#utility.yul\":5487:5493   */\n      dup2\n        /* \"#utility.yul\":5479:5485   */\n      dup4\n        /* \"#utility.yul\":5474:5477   */\n      dup3\n        /* \"#utility.yul\":5461:5494   */\n      calldatacopy\n        /* \"#utility.yul\":5443:5446   */\n      0x00\n        /* \"#utility.yul\":5513:5529   */\n      swap2\n      add\n        /* \"#utility.yul\":5538:5551   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5513:5529   */\n      swap2\n        /* \"#utility.yul\":5304:5575   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5580:5805   */\n    tag_79:\n        /* \"#utility.yul\":5647:5656   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5668:5679   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5665:5799   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":5721:5731   */\n      0x4e487b71\n        /* \"#utility.yul\":5716:5719   */\n      0xe0\n        /* \"#utility.yul\":5712:5732   */\n      shl\n        /* \"#utility.yul\":5709:5710   */\n      0x00\n        /* \"#utility.yul\":5702:5733   */\n      mstore\n        /* \"#utility.yul\":5756:5760   */\n      0x11\n        /* \"#utility.yul\":5753:5754   */\n      0x04\n        /* \"#utility.yul\":5746:5761   */\n      mstore\n        /* \"#utility.yul\":5784:5788   */\n      0x24\n        /* \"#utility.yul\":5781:5782   */\n      0x00\n        /* \"#utility.yul\":5774:5789   */\n      revert\n        /* \"#utility.yul\":6196:6323   */\n    tag_88:\n        /* \"#utility.yul\":6257:6267   */\n      0x4e487b71\n        /* \"#utility.yul\":6252:6255   */\n      0xe0\n        /* \"#utility.yul\":6248:6268   */\n      shl\n        /* \"#utility.yul\":6245:6246   */\n      0x00\n        /* \"#utility.yul\":6238:6269   */\n      mstore\n        /* \"#utility.yul\":6288:6292   */\n      0x21\n        /* \"#utility.yul\":6285:6286   */\n      0x04\n        /* \"#utility.yul\":6278:6293   */\n      mstore\n        /* \"#utility.yul\":6312:6316   */\n      0x24\n        /* \"#utility.yul\":6309:6310   */\n      0x00\n        /* \"#utility.yul\":6302:6317   */\n      revert\n        /* \"#utility.yul\":6652:6940   */\n    tag_112:\n        /* \"#utility.yul\":6827:6833   */\n      dup3\n        /* \"#utility.yul\":6816:6825   */\n      dup2\n        /* \"#utility.yul\":6809:6834   */\n      mstore\n        /* \"#utility.yul\":6870:6872   */\n      0x40\n        /* \"#utility.yul\":6865:6867   */\n      0x20\n        /* \"#utility.yul\":6854:6863   */\n      dup3\n        /* \"#utility.yul\":6850:6868   */\n      add\n        /* \"#utility.yul\":6843:6873   */\n      mstore\n        /* \"#utility.yul\":6790:6794   */\n      0x00\n        /* \"#utility.yul\":6890:6934   */\n      tag_186\n        /* \"#utility.yul\":6930:6932   */\n      0x40\n        /* \"#utility.yul\":6919:6928   */\n      dup4\n        /* \"#utility.yul\":6915:6933   */\n      add\n        /* \"#utility.yul\":6907:6913   */\n      dup5\n        /* \"#utility.yul\":6890:6934   */\n      tag_133\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6882:6934   */\n      swap5\n        /* \"#utility.yul\":6652:6940   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6945:7232   */\n    tag_114:\n        /* \"#utility.yul\":7074:7077   */\n      0x00\n        /* \"#utility.yul\":7112:7118   */\n      dup3\n        /* \"#utility.yul\":7106:7119   */\n      mload\n        /* \"#utility.yul\":7128:7194   */\n      tag_188\n        /* \"#utility.yul\":7187:7193   */\n      dup2\n        /* \"#utility.yul\":7182:7185   */\n      dup5\n        /* \"#utility.yul\":7175:7179   */\n      0x20\n        /* \"#utility.yul\":7167:7173   */\n      dup8\n        /* \"#utility.yul\":7163:7180   */\n      add\n        /* \"#utility.yul\":7128:7194   */\n      tag_132\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7210:7226   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":6945:7232   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7237:7421   */\n    tag_121:\n        /* \"#utility.yul\":7307:7313   */\n      0x00\n        /* \"#utility.yul\":7360:7362   */\n      0x20\n        /* \"#utility.yul\":7348:7357   */\n      dup3\n        /* \"#utility.yul\":7339:7346   */\n      dup5\n        /* \"#utility.yul\":7335:7358   */\n      sub\n        /* \"#utility.yul\":7331:7363   */\n      slt\n        /* \"#utility.yul\":7328:7380   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":7376:7377   */\n      0x00\n        /* \"#utility.yul\":7373:7374   */\n      dup1\n        /* \"#utility.yul\":7366:7378   */\n      revert\n        /* \"#utility.yul\":7328:7380   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":7399:7415   */\n      mload\n      swap2\n        /* \"#utility.yul\":7237:7421   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201b42b45ad9f24b509a66119a7bbe5cd2f4c0aafb7b467cd53f3bf18bba5aa2f664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506109f98061001d5f395ff3fe608060405260043610610066575f3560e01c80639e5d4c49116100415780639e5d4c4914610109578063affed0e014610129578063fc0c546a1461014b575f80fd5b806301ffc9a7146100715780631626ba7e146100a55780638da5cb5b146100dd575f80fd5b3661006d57005b5f80fd5b34801561007c575f80fd5b5061009061008b3660046106f6565b610182565b60405190151581526020015b60405180910390f35b3480156100b0575f80fd5b506100c46100bf366004610731565b6101b8565b6040516001600160e01b0319909116815260200161009c565b3480156100e8575f80fd5b506100f16101ed565b6040516001600160a01b03909116815260200161009c565b61011c6101173660046107fd565b6102d6565b60405161009c91906108cc565b348015610134575f80fd5b5061013d5f5481565b60405190815260200161009c565b348015610156575f80fd5b5061015f6103ad565b604080519384526001600160a01b0390921660208401529082015260600161009c565b5f6001600160e01b031982166301ffc9a760e01b14806101b257506001600160e01b03198216630801407360e31b145b92915050565b5f806101cc6101c56101ed565b85856103e8565b905080156101e45750630b135d3f60e11b90506101b2565b505f9392505050565b5f805f80306001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561022d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025191906108de565b925092509250468314610267575f935050505090565b6040516331a9108f60e11b8152600481018290526001600160a01b03831690636352211e90602401602060405180830381865afa1580156102aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ce9190610914565b935050505090565b60606102e06101ed565b6001600160a01b0316336001600160a01b0316146103375760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b60448201526064015b60405180910390fd5b5f856001600160a01b031685858560405161035392919061092f565b5f6040518083038185875af1925050503d805f811461038d576040519150601f19603f3d011682016040523d82523d5f602084013e610392565b606091505b5092509050806103a457815160208301fd5b50949350505050565b5f808030803b906103c9906103c360608461093e565b83610449565b8060200190518101906103dc91906108de565b93509350935050909192565b5f805f6103f585856104fa565b5090925090505f81600381111561040e5761040e61095d565b14801561042c5750856001600160a01b0316826001600160a01b0316145b8061043d575061043d868686610543565b925050505b9392505050565b6060833b5f81900361046a57505060408051602081019091525f8152610442565b8084111561048757505060408051602081019091525f8152610442565b838310156104b95760405163162544fd60e11b815260048101829052602481018590526044810184905260640161032e565b8383038482035f8282106104cd57826104cf565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050509392505050565b5f805f8351604103610531576020840151604085015160608601515f1a6105238882858561062e565b95509550955050505061053c565b505081515f91506002905b9250925092565b5f805f856001600160a01b03168585604051602401610563929190610971565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16630b135d3f60e11b179052516105ad9190610991565b5f60405180830381855afa9150503d805f81146105e5576040519150601f19603f3d011682016040523d82523d5f602084013e6105ea565b606091505b50915091508180156105fe57506020815110155b801561043d57508051630b135d3f60e11b9061062390830160209081019084016109ac565b149695505050505050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561066757505f915060039050826106ec565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156106b8573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166106e357505f9250600191508290506106ec565b92505f91508190505b9450945094915050565b5f60208284031215610706575f80fd5b81356001600160e01b031981168114610442575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215610742575f80fd5b82359150602083013567ffffffffffffffff80821115610760575f80fd5b818501915085601f830112610773575f80fd5b8135818111156107855761078561071d565b604051601f8201601f19908116603f011681019083821181831017156107ad576107ad61071d565b816040528281528860208487010111156107c5575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b6001600160a01b03811681146107fa575f80fd5b50565b5f805f8060608587031215610810575f80fd5b843561081b816107e6565b935060208501359250604085013567ffffffffffffffff8082111561083e575f80fd5b818701915087601f830112610851575f80fd5b81358181111561085f575f80fd5b886020828501011115610870575f80fd5b95989497505060200194505050565b5f5b83811015610899578181015183820152602001610881565b50505f910152565b5f81518084526108b881602086016020860161087f565b601f01601f19169290920160200192915050565b602081525f61044260208301846108a1565b5f805f606084860312156108f0575f80fd5b835192506020840151610902816107e6565b80925050604084015190509250925092565b5f60208284031215610924575f80fd5b8151610442816107e6565b818382375f9101908152919050565b818103818111156101b257634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b828152604060208201525f61098960408301846108a1565b949350505050565b5f82516109a281846020870161087f565b9190910192915050565b5f602082840312156109bc575f80fd5b505191905056fea26469706673582212201b42b45ad9f24b509a66119a7bbe5cd2f4c0aafb7b467cd53f3bf18bba5aa2f664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F9 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x66 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x41 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x6D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x9C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8014073 PUSH1 0xE3 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1CC PUSH2 0x1C5 PUSH2 0x1ED JUMP JUMPDEST DUP6 DUP6 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1E4 JUMPI POP PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 POP PUSH2 0x1B2 JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x267 JUMPI PUSH0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E0 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x353 SWAP3 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x392 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP3 POP SWAP1 POP DUP1 PUSH2 0x3A4 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 ADDRESS DUP1 EXTCODESIZE SWAP1 PUSH2 0x3C9 SWAP1 PUSH2 0x3C3 PUSH1 0x60 DUP5 PUSH2 0x93E JUMP JUMPDEST DUP4 PUSH2 0x449 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x3F5 DUP6 DUP6 PUSH2 0x4FA JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x40E JUMPI PUSH2 0x40E PUSH2 0x95D JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x42C JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x43D JUMPI POP PUSH2 0x43D DUP7 DUP7 DUP7 PUSH2 0x543 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH0 DUP2 SWAP1 SUB PUSH2 0x46A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x442 JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0x487 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x442 JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162544FD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x32E JUMP JUMPDEST DUP4 DUP4 SUB DUP5 DUP3 SUB PUSH0 DUP3 DUP3 LT PUSH2 0x4CD JUMPI DUP3 PUSH2 0x4CF JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP6 POP SWAP1 POP DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x531 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x523 DUP9 DUP3 DUP6 DUP6 PUSH2 0x62E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x53C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x563 SWAP3 SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB135D3F PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5FE JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x43D JUMPI POP DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x623 SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9AC JUMP JUMPDEST EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x667 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6E3 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x6EC JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x706 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x785 JUMPI PUSH2 0x785 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AD PUSH2 0x71D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x81B DUP2 PUSH2 0x7E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x83E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x851 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x870 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x899 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x881 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x8B8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x442 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8A1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x902 DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x442 DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x989 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x9A2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL TIMESTAMP 0xB4 GAS 0xD9 CALLCODE 0x4B POP SWAP11 PUSH7 0x119A7BBE5CD2F4 0xC0 0xAA 0xFB PUSH28 0x467CD53F3BF18BBA5AA2F664736F6C63430008140033000000000000 ",
							"sourceMap": "718:1900:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@codeAt_297": {
									"entryPoint": 1097,
									"id": 297,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@codeSize_227": {
									"entryPoint": null,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@executeCall_59": {
									"entryPoint": 726,
									"id": 59,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidERC1271SignatureNow_1191": {
									"entryPoint": 1347,
									"id": 1191,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignatureNow_1139": {
									"entryPoint": 1000,
									"id": 1139,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignature_185": {
									"entryPoint": 440,
									"id": 185,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nonce_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_133": {
									"entryPoint": 493,
									"id": 133,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_156": {
									"entryPoint": 386,
									"id": 156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_100": {
									"entryPoint": 941,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@tryRecover_804": {
									"entryPoint": 1274,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_992": {
									"entryPoint": 1582,
									"id": 992,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_bytes": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7826:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:11"
															},
															"nodeType": "YulIf",
															"src": "93:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:11"
															},
															"nodeType": "YulIf",
															"src": "199:71:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:11",
														"type": ""
													}
												],
												"src": "14:286:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:11",
														"type": ""
													}
												],
												"src": "305:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "529:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "546:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "553:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "558:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "539:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "586:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "589:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "579:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "579:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "579:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "497:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "725:893:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "780:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "783:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "773:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "773:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "773:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "755:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "738:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:32:11"
															},
															"nodeType": "YulIf",
															"src": "735:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "796:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "806:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "838:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "869:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "880:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "852:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "842:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "893:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "903:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "897:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "948:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "960:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "950:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "950:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "950:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "936:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "944:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "933:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:14:11"
															},
															"nodeType": "YulIf",
															"src": "930:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "973:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "998:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "977:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1065:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1032:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1036:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1028:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1028:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:35:11"
															},
															"nodeType": "YulIf",
															"src": "1014:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1078:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1101:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1082:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1119:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1123:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1116:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:10:11"
															},
															"nodeType": "YulIf",
															"src": "1113:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1162:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1184:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1216:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1262:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1266:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1258:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1258:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1273:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1254:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1278:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1283:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1234:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1220:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1346:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1348:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1305:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1317:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1302:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1302:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1325:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1299:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:46:11"
															},
															"nodeType": "YulIf",
															"src": "1296:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1388:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1423:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1408:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1474:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1449:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1453:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1445:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1458:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1441:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1441:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1463:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1438:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:33:11"
															},
															"nodeType": "YulIf",
															"src": "1435:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1522:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1510:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1510:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1531:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:11:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1540:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1497:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1497:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1567:6:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1575:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1563:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1563:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1580:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1559:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1559:24:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1585:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1596:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1606:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "683:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "694:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "706:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "714:6:11",
														"type": ""
													}
												],
												"src": "629:989:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1722:103:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1732:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1744:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1732:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1801:3:11",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1806:10:11",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1797:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1797:20:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1785:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1785:33:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1767:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1767:52:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1691:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1702:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1713:4:11",
														"type": ""
													}
												],
												"src": "1623:202:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1931:125:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1941:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1953:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1941:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1998:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2006:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1976:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1976:74:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1900:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1922:4:11",
														"type": ""
													}
												],
												"src": "1830:226:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2106:109:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2193:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2205:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2195:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2195:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2195:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2129:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2140:5:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2147:42:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2136:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2136:54:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2126:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2126:65:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:73:11"
															},
															"nodeType": "YulIf",
															"src": "2116:93:11"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:11",
														"type": ""
													}
												],
												"src": "2061:154:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2343:671:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2389:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2398:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2391:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2391:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2391:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2364:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2356:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:32:11"
															},
															"nodeType": "YulIf",
															"src": "2353:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2414:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2440:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2427:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2418:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2484:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2459:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2459:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2499:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2509:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2523:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2550:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2561:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2546:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2546:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2533:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2574:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2588:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2578:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2629:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2639:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2633:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2684:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2693:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2696:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2686:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2686:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2672:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2680:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2669:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:14:11"
															},
															"nodeType": "YulIf",
															"src": "2666:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2709:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2734:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2713:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2789:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2798:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2801:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2791:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2791:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2791:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2768:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2764:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2764:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2779:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:35:11"
															},
															"nodeType": "YulIf",
															"src": "2750:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2814:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2841:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2828:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2818:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2871:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2880:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2883:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2873:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2873:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2873:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2867:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2856:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:14:11"
															},
															"nodeType": "YulIf",
															"src": "2853:34:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2937:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2949:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2939:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2910:2:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2914:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2906:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2923:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2902:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2902:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2928:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2899:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:37:11"
															},
															"nodeType": "YulIf",
															"src": "2896:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2962:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2976:2:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:11:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2992:16:11",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3002:6:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2316:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2324:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2332:6:11",
														"type": ""
													}
												],
												"src": "2220:794:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3095:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3104:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3099:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3189:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3194:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3185:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3185:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3208:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3213:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3204:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3204:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3198:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3198:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3178:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3125:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3136:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3138:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3147:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3150:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3143:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3143:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3138:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3118:3:11",
																"statements": []
															},
															"src": "3114:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3247:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3252:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3236:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3236:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3063:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3068:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3073:6:11",
														"type": ""
													}
												],
												"src": "3019:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:221:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3333:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3353:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3347:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3337:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3375:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3435:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3442:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:16:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3453:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3458:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3396:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:76:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3396:76:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3481:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3509:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3517:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3505:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3505:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3526:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3522:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3522:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3501:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3501:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3300:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3307:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3315:3:11",
														"type": ""
													}
												],
												"src": "3274:270:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:98:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3685:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3696:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3678:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3708:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3733:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3745:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3756:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3716:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3708:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3637:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3648:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3659:4:11",
														"type": ""
													}
												],
												"src": "3549:217:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3882:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3894:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3890:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3890:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3882:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3917:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3917:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3841:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3852:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3863:4:11",
														"type": ""
													}
												],
												"src": "3771:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4110:211:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4120:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4132:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4120:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4173:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4200:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4211:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4228:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4216:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4216:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:83:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4189:83:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4303:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4288:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4308:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4281:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4063:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4074:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4082:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4090:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4101:4:11",
														"type": ""
													}
												],
												"src": "3953:368:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:258:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4487:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4496:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4499:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4489:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4489:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4489:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4462:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4471:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4483:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4454:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:32:11"
															},
															"nodeType": "YulIf",
															"src": "4451:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4512:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4528:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4522:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4547:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4570:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4581:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4566:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4560:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:25:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4551:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4619:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4594:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4594:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4634:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4644:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4658:35:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4689:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4674:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4668:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:25:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4391:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4402:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4414:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4422:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4430:6:11",
														"type": ""
													}
												],
												"src": "4326:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4785:170:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4831:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4840:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4843:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4833:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4833:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4833:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4806:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4815:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4802:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4798:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:32:11"
															},
															"nodeType": "YulIf",
															"src": "4795:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4856:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4875:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4869:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4860:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4919:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4894:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4894:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4944:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4751:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4762:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4774:6:11",
														"type": ""
													}
												],
												"src": "4704:251:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5134:165:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5151:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5162:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5144:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5185:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5196:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5181:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5224:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5235:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5220:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5220:18:11"
																	},
																	{
																		"hexValue": "4e6f7420746f6b656e206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5240:17:11",
																		"type": "",
																		"value": "Not token owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5213:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5267:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5279:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5267:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5111:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5125:4:11",
														"type": ""
													}
												],
												"src": "4960:339:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5451:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5474:3:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5479:6:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5487:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5461:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5461:33:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5503:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5517:3:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5522:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5513:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5507:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5545:2:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5549:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5538:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5538:13:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5538:13:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5560:9:11",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "5567:2:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5419:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5424:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5432:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5443:3:11",
														"type": ""
													}
												],
												"src": "5304:271:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5629:176:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5639:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5651:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5654:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5647:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5639:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5688:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5709:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5716:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5721:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5712:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5712:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5702:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5702:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5753:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5756:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5746:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5746:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5746:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5781:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5784:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5774:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5774:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5774:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5671:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5677:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5668:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:11:11"
															},
															"nodeType": "YulIf",
															"src": "5665:134:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5611:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5614:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5620:4:11",
														"type": ""
													}
												],
												"src": "5580:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:258:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5991:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5981:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:11"
															},
															"nodeType": "YulIf",
															"src": "5943:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6004:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6020:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6014:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6004:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6039:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6052:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:25:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6043:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6111:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6086:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6086:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6126:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6136:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6150:35:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6166:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6160:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:25:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5883:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5894:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5906:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5914:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5922:6:11",
														"type": ""
													}
												],
												"src": "5810:381:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6252:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6257:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6248:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6248:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6238:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6285:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6288:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6278:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6309:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6312:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6302:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6302:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6302:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "6196:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6485:162:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6495:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6507:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6503:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6503:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6495:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6537:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6586:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6571:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6591:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6564:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6618:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6629:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6614:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6614:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6634:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6607:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6438:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6449:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6457:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6465:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6476:4:11",
														"type": ""
													}
												],
												"src": "6328:319:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6799:141:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6816:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6827:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6809:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6809:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6854:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6865:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6850:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6850:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6843:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6882:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6907:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6930:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6915:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6890:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6890:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6882:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6760:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6771:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6779:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6790:4:11",
														"type": ""
													}
												],
												"src": "6652:288:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7082:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7092:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7112:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7106:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7096:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7167:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7175:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7163:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7187:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7128:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7128:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7128:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7203:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7214:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7219:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7210:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7203:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7058:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7063:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7074:3:11",
														"type": ""
													}
												],
												"src": "6945:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7318:103:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7364:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7373:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7376:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7366:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7366:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7366:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7339:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7348:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7335:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:32:11"
															},
															"nodeType": "YulIf",
															"src": "7328:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7389:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7405:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7399:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7284:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7295:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7307:6:11",
														"type": ""
													}
												],
												"src": "7237:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7607:217:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7617:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7629:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7617:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7660:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7653:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7653:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7698:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7709:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7694:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7694:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7687:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7687:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7687:45:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7752:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7763:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7748:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7748:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7741:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7741:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7741:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7795:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7806:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7791:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7791:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7811:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7784:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7552:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7563:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7571:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7579:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7587:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7598:4:11",
														"type": ""
													}
												],
												"src": "7426:398:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := mload(add(headStart, 64))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610066575f3560e01c80639e5d4c49116100415780639e5d4c4914610109578063affed0e014610129578063fc0c546a1461014b575f80fd5b806301ffc9a7146100715780631626ba7e146100a55780638da5cb5b146100dd575f80fd5b3661006d57005b5f80fd5b34801561007c575f80fd5b5061009061008b3660046106f6565b610182565b60405190151581526020015b60405180910390f35b3480156100b0575f80fd5b506100c46100bf366004610731565b6101b8565b6040516001600160e01b0319909116815260200161009c565b3480156100e8575f80fd5b506100f16101ed565b6040516001600160a01b03909116815260200161009c565b61011c6101173660046107fd565b6102d6565b60405161009c91906108cc565b348015610134575f80fd5b5061013d5f5481565b60405190815260200161009c565b348015610156575f80fd5b5061015f6103ad565b604080519384526001600160a01b0390921660208401529082015260600161009c565b5f6001600160e01b031982166301ffc9a760e01b14806101b257506001600160e01b03198216630801407360e31b145b92915050565b5f806101cc6101c56101ed565b85856103e8565b905080156101e45750630b135d3f60e11b90506101b2565b505f9392505050565b5f805f80306001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561022d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025191906108de565b925092509250468314610267575f935050505090565b6040516331a9108f60e11b8152600481018290526001600160a01b03831690636352211e90602401602060405180830381865afa1580156102aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ce9190610914565b935050505090565b60606102e06101ed565b6001600160a01b0316336001600160a01b0316146103375760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b60448201526064015b60405180910390fd5b5f856001600160a01b031685858560405161035392919061092f565b5f6040518083038185875af1925050503d805f811461038d576040519150601f19603f3d011682016040523d82523d5f602084013e610392565b606091505b5092509050806103a457815160208301fd5b50949350505050565b5f808030803b906103c9906103c360608461093e565b83610449565b8060200190518101906103dc91906108de565b93509350935050909192565b5f805f6103f585856104fa565b5090925090505f81600381111561040e5761040e61095d565b14801561042c5750856001600160a01b0316826001600160a01b0316145b8061043d575061043d868686610543565b925050505b9392505050565b6060833b5f81900361046a57505060408051602081019091525f8152610442565b8084111561048757505060408051602081019091525f8152610442565b838310156104b95760405163162544fd60e11b815260048101829052602481018590526044810184905260640161032e565b8383038482035f8282106104cd57826104cf565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050509392505050565b5f805f8351604103610531576020840151604085015160608601515f1a6105238882858561062e565b95509550955050505061053c565b505081515f91506002905b9250925092565b5f805f856001600160a01b03168585604051602401610563929190610971565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16630b135d3f60e11b179052516105ad9190610991565b5f60405180830381855afa9150503d805f81146105e5576040519150601f19603f3d011682016040523d82523d5f602084013e6105ea565b606091505b50915091508180156105fe57506020815110155b801561043d57508051630b135d3f60e11b9061062390830160209081019084016109ac565b149695505050505050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561066757505f915060039050826106ec565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156106b8573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166106e357505f9250600191508290506106ec565b92505f91508190505b9450945094915050565b5f60208284031215610706575f80fd5b81356001600160e01b031981168114610442575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215610742575f80fd5b82359150602083013567ffffffffffffffff80821115610760575f80fd5b818501915085601f830112610773575f80fd5b8135818111156107855761078561071d565b604051601f8201601f19908116603f011681019083821181831017156107ad576107ad61071d565b816040528281528860208487010111156107c5575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b6001600160a01b03811681146107fa575f80fd5b50565b5f805f8060608587031215610810575f80fd5b843561081b816107e6565b935060208501359250604085013567ffffffffffffffff8082111561083e575f80fd5b818701915087601f830112610851575f80fd5b81358181111561085f575f80fd5b886020828501011115610870575f80fd5b95989497505060200194505050565b5f5b83811015610899578181015183820152602001610881565b50505f910152565b5f81518084526108b881602086016020860161087f565b601f01601f19169290920160200192915050565b602081525f61044260208301846108a1565b5f805f606084860312156108f0575f80fd5b835192506020840151610902816107e6565b80925050604084015190509250925092565b5f60208284031215610924575f80fd5b8151610442816107e6565b818382375f9101908152919050565b818103818111156101b257634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b828152604060208201525f61098960408301846108a1565b949350505050565b5f82516109a281846020870161087f565b9190910192915050565b5f602082840312156109bc575f80fd5b505191905056fea26469706673582212201b42b45ad9f24b509a66119a7bbe5cd2f4c0aafb7b467cd53f3bf18bba5aa2f664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x66 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x41 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x6D JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x9C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8014073 PUSH1 0xE3 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1CC PUSH2 0x1C5 PUSH2 0x1ED JUMP JUMPDEST DUP6 DUP6 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1E4 JUMPI POP PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 POP PUSH2 0x1B2 JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x267 JUMPI PUSH0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E0 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x353 SWAP3 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x392 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP3 POP SWAP1 POP DUP1 PUSH2 0x3A4 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 ADDRESS DUP1 EXTCODESIZE SWAP1 PUSH2 0x3C9 SWAP1 PUSH2 0x3C3 PUSH1 0x60 DUP5 PUSH2 0x93E JUMP JUMPDEST DUP4 PUSH2 0x449 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x3F5 DUP6 DUP6 PUSH2 0x4FA JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x40E JUMPI PUSH2 0x40E PUSH2 0x95D JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x42C JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x43D JUMPI POP PUSH2 0x43D DUP7 DUP7 DUP7 PUSH2 0x543 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH0 DUP2 SWAP1 SUB PUSH2 0x46A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x442 JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0x487 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x442 JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162544FD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x32E JUMP JUMPDEST DUP4 DUP4 SUB DUP5 DUP3 SUB PUSH0 DUP3 DUP3 LT PUSH2 0x4CD JUMPI DUP3 PUSH2 0x4CF JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP6 POP SWAP1 POP DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x531 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x523 DUP9 DUP3 DUP6 DUP6 PUSH2 0x62E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x53C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x563 SWAP3 SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB135D3F PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5FE JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x43D JUMPI POP DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x623 SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x9AC JUMP JUMPDEST EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x667 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6E3 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x6EC JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x706 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x785 JUMPI PUSH2 0x785 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AD PUSH2 0x71D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x81B DUP2 PUSH2 0x7E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x83E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x851 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x870 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x899 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x881 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x8B8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x442 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8A1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x902 DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x442 DUP2 PUSH2 0x7E6 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x989 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x9A2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL TIMESTAMP 0xB4 GAS 0xD9 CALLCODE 0x4B POP SWAP11 PUSH7 0x119A7BBE5CD2F4 0xC0 0xAA 0xFB PUSH28 0x467CD53F3BF18BBA5AA2F664736F6C63430008140033000000000000 ",
							"sourceMap": "718:1900:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:207;;;;;;;;;;-1:-1:-1;2001:207:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:11;;463:22;445:41;;433:2;418:18;2001:207:0;;;;;;;;2216:399;;;;;;;;;;-1:-1:-1;2216:399:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1785:33:11;;;1767:52;;1755:2;1740:18;2216:399:0;1623:202:11;1724:269:0;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1994:55:11;;;1976:74;;1964:2;1949:18;1724:269:0;1830:226:11;860:434:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;831:20::-;;;;;;;;;;;;;;;;;;;3917:25:11;;;3905:2;3890:18;831:20:0;3771:177:11;1302:414:0;;;;;;;;;;;;;:::i;:::-;;;;4155:25:11;;;-1:-1:-1;;;;;4216:55:11;;;4211:2;4196:18;;4189:83;4288:18;;;4281:34;4143:2;4128:18;1302:414:0;3953:368:11;2001:207:0;2069:4;-1:-1:-1;;;;;;2094:40:0;;-1:-1:-1;;;2094:40:0;;:105;;-1:-1:-1;;;;;;;2151:48:0;;-1:-1:-1;;;2151:48:0;2094:105;2086:114;2001:207;-1:-1:-1;;2001:207:0:o;2216:399::-;2330:17;2365:12;2380:112;2431:7;:5;:7::i;:::-;2453:4;2472:9;2380:36;:112::i;:::-;2365:127;;2509:7;2505:81;;;-1:-1:-1;;;;2540:34:0;-1:-1:-1;2533:41:0;;2505:81;-1:-1:-1;2598:9:0;;2216:399;-1:-1:-1;;;2216:399:0:o;1724:269::-;1762:7;1783:15;1800:21;1823:15;1842:4;-1:-1:-1;;;;;1842:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1782:86;;;;;;1894:13;1883:7;:24;1879:47;;1924:1;1909:17;;;;;1724:269;:::o;1879:47::-;1946:39;;-1:-1:-1;;;1946:39:0;;;;;3917:25:11;;;-1:-1:-1;;;;;1946:30:0;;;;;3890:18:11;;1946:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1939:46;;;;;1724:269;:::o;860:434::-;989:19;1043:7;:5;:7::i;:::-;-1:-1:-1;;;;;1029:21:0;:10;-1:-1:-1;;;;;1029:21:0;;1021:49;;;;-1:-1:-1;;;1021:49:0;;5162:2:11;1021:49:0;;;5144:21:11;5201:2;5181:18;;;5174:30;-1:-1:-1;;;5220:18:11;;;5213:45;5275:18;;1021:49:0;;;;;;;;;1083:12;1126:2;-1:-1:-1;;;;;1126:7:0;1141:5;1148:4;;1126:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1106:47:0;-1:-1:-1;1106:47:0;-1:-1:-1;1106:47:0;1166:121;;1253:6;1247:13;1242:2;1234:6;1230:15;1223:38;1166:121;1010:284;860:434;;;;;;:::o;1302:414::-;1383:15;;;1517:4;1509:25;;;1594:53;;1625:13;1634:4;1509:25;1625:13;:::i;:::-;1640:6;1594:15;:53::i;:::-;1565:143;;;;;;;;;;;;:::i;:::-;1545:163;;;;;;;1302:414;;;:::o;1015:368:6:-;1121:4;1138:17;1157:24;1187:33;1204:4;1210:9;1187:16;:33::i;:::-;-1:-1:-1;1137:83:6;;-1:-1:-1;1137:83:6;-1:-1:-1;1259:26:6;1250:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1302:6;-1:-1:-1;;;;;1289:19:6;:9;-1:-1:-1;;;;;1289:19:6;;1250:58;1249:127;;;;1325:51;1352:6;1360:4;1366:9;1325:26;:51::i;:::-;1230:146;;;;1015:368;;;;;;:::o;1793:946:1:-;1877:18;1356;;1903:13;1944:10;;;1940:32;;-1:-1:-1;;1963:9:1;;;;;;;;;-1:-1:-1;1963:9:1;;1956:16;;1940:32;1992:5;1983:6;:14;1979:36;;;-1:-1:-1;;2006:9:1;;;;;;;;;-1:-1:-1;2006:9:1;;1999:16;;1979:36;2032:6;2025:4;:13;2021:65;;;2047:39;;-1:-1:-1;;;2047:39:1;;;;;6530:25:11;;;6571:18;;;6564:34;;;6614:18;;;6607:34;;;6503:18;;2047:39:1;6328:319:11;2021:65:1;2130:13;;;2169:14;;;2112:15;2207:17;;;:37;;2237:7;2207:37;;;2227:7;2207:37;2413:4;2407:11;;2501:26;;;-1:-1:-1;;2497:42:1;2486:54;;2473:68;;;2584:19;;;2407:11;-1:-1:-1;2192:52:1;-1:-1:-1;2192:52:1;2708:6;2515:4;2690:16;;2683:5;2671:50;2262:467;;;1897:842;1793:946;;;;;:::o;2483:766:5:-;2564:7;2573:12;2587:7;2610:9;:16;2630:2;2610:22;2606:637;;2946:4;2931:20;;2925:27;2995:4;2980:20;;2974:27;3052:4;3037:20;;3031:27;2648:9;3023:36;3093:25;3104:4;3023:36;2925:27;2974;3093:10;:25::i;:::-;3086:32;;;;;;;;;;;2606:637;-1:-1:-1;;3214:16:5;;3165:1;;-1:-1:-1;3169:35:5;;2606:637;2483:766;;;;;:::o;1789:458:6:-;1932:4;1949:12;1963:19;1986:6;-1:-1:-1;;;;;1986:17:6;2060:4;2066:9;2017:60;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2017:60:6;;;;;;;;;;;;;;;;-1:-1:-1;;;2017:60:6;;;1986:101;;;2017:60;1986:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:139;;;;2105:7;:42;;;;;2145:2;2128:6;:13;:19;;2105:42;:134;;;;-1:-1:-1;2163:29:6;;-1:-1:-1;;;2204:34:6;2163:29;;;;;;;;;;;;:::i;:::-;:76;;1789:458;-1:-1:-1;;;;;;1789:458:6:o;5591:1530:5:-;5717:7;;;6650:66;6637:79;;6633:164;;;-1:-1:-1;6748:1:5;;-1:-1:-1;6752:30:5;;-1:-1:-1;6784:1:5;6732:54;;6633:164;6908:24;;;6891:14;6908:24;;;;;;;;;7653:25:11;;;7726:4;7714:17;;7694:18;;;7687:45;;;;7748:18;;;7741:34;;;7791:18;;;7784:34;;;6908:24:5;;7625:19:11;;6908:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6908:24:5;;-1:-1:-1;;6908:24:5;;;-1:-1:-1;;;;;;;6946:20:5;;6942:113;;-1:-1:-1;6998:1:5;;-1:-1:-1;7002:29:5;;-1:-1:-1;6998:1:5;;-1:-1:-1;6982:62:5;;6942:113;7073:6;-1:-1:-1;7081:20:5;;-1:-1:-1;7081:20:5;;-1:-1:-1;5591:1530:5;;;;;;;;;:::o;14:286:11:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:11;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:989;706:6;714;767:2;755:9;746:7;742:23;738:32;735:52;;;783:1;780;773:12;735:52;819:9;806:23;796:33;;880:2;869:9;865:18;852:32;903:18;944:2;936:6;933:14;930:34;;;960:1;957;950:12;930:34;998:6;987:9;983:22;973:32;;1043:7;1036:4;1032:2;1028:13;1024:27;1014:55;;1065:1;1062;1055:12;1014:55;1101:2;1088:16;1123:2;1119;1116:10;1113:36;;;1129:18;;:::i;:::-;1204:2;1198:9;1172:2;1258:13;;-1:-1:-1;;1254:22:11;;;1278:2;1250:31;1246:40;1234:53;;;1302:18;;;1322:22;;;1299:46;1296:72;;;1348:18;;:::i;:::-;1388:10;1384:2;1377:22;1423:2;1415:6;1408:18;1463:7;1458:2;1453;1449;1445:11;1441:20;1438:33;1435:53;;;1484:1;1481;1474:12;1435:53;1540:2;1535;1531;1527:11;1522:2;1514:6;1510:15;1497:46;1585:1;1580:2;1575;1567:6;1563:15;1559:24;1552:35;1606:6;1596:16;;;;;;;629:989;;;;;:::o;2061:154::-;-1:-1:-1;;;;;2140:5:11;2136:54;2129:5;2126:65;2116:93;;2205:1;2202;2195:12;2116:93;2061:154;:::o;2220:794::-;2308:6;2316;2324;2332;2385:2;2373:9;2364:7;2360:23;2356:32;2353:52;;;2401:1;2398;2391:12;2353:52;2440:9;2427:23;2459:31;2484:5;2459:31;:::i;:::-;2509:5;-1:-1:-1;2561:2:11;2546:18;;2533:32;;-1:-1:-1;2616:2:11;2601:18;;2588:32;2639:18;2669:14;;;2666:34;;;2696:1;2693;2686:12;2666:34;2734:6;2723:9;2719:22;2709:32;;2779:7;2772:4;2768:2;2764:13;2760:27;2750:55;;2801:1;2798;2791:12;2750:55;2841:2;2828:16;2867:2;2859:6;2856:14;2853:34;;;2883:1;2880;2873:12;2853:34;2928:7;2923:2;2914:6;2910:2;2906:15;2902:24;2899:37;2896:57;;;2949:1;2946;2939:12;2896:57;2220:794;;;;-1:-1:-1;;2980:2:11;2972:11;;-1:-1:-1;;;2220:794:11:o;3019:250::-;3104:1;3114:113;3128:6;3125:1;3122:13;3114:113;;;3204:11;;;3198:18;3185:11;;;3178:39;3150:2;3143:10;3114:113;;;-1:-1:-1;;3261:1:11;3243:16;;3236:27;3019:250::o;3274:270::-;3315:3;3353:5;3347:12;3380:6;3375:3;3368:19;3396:76;3465:6;3458:4;3453:3;3449:14;3442:4;3435:5;3431:16;3396:76;:::i;:::-;3526:2;3505:15;-1:-1:-1;;3501:29:11;3492:39;;;;3533:4;3488:50;;3274:270;-1:-1:-1;;3274:270:11:o;3549:217::-;3696:2;3685:9;3678:21;3659:4;3716:44;3756:2;3745:9;3741:18;3733:6;3716:44;:::i;4326:373::-;4414:6;4422;4430;4483:2;4471:9;4462:7;4458:23;4454:32;4451:52;;;4499:1;4496;4489:12;4451:52;4528:9;4522:16;4512:26;;4581:2;4570:9;4566:18;4560:25;4594:31;4619:5;4594:31;:::i;:::-;4644:5;4634:15;;;4689:2;4678:9;4674:18;4668:25;4658:35;;4326:373;;;;;:::o;4704:251::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4875:9;4869:16;4894:31;4919:5;4894:31;:::i;5304:271::-;5487:6;5479;5474:3;5461:33;5443:3;5513:16;;5538:13;;;5513:16;5304:271;-1:-1:-1;5304:271:11:o;5580:225::-;5647:9;;;5668:11;;;5665:134;;;5721:10;5716:3;5712:20;5709:1;5702:31;5756:4;5753:1;5746:15;5784:4;5781:1;5774:15;6196:127;6257:10;6252:3;6248:20;6245:1;6238:31;6288:4;6285:1;6278:15;6312:4;6309:1;6302:15;6652:288;6827:6;6816:9;6809:25;6870:2;6865;6854:9;6850:18;6843:30;6790:4;6890:44;6930:2;6919:9;6915:18;6907:6;6890:44;:::i;:::-;6882:52;6652:288;-1:-1:-1;;;;6652:288:11:o;6945:287::-;7074:3;7112:6;7106:13;7128:66;7187:6;7182:3;7175:4;7167:6;7163:17;7128:66;:::i;:::-;7210:16;;;;;6945:287;-1:-1:-1;;6945:287:11:o;7237:184::-;7307:6;7360:2;7348:9;7339:7;7335:23;7331:32;7328:52;;;7376:1;7373;7366:12;7328:52;-1:-1:-1;7399:16:11;;7237:184;-1:-1:-1;7237:184:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "510600",
								"executionCost": "541",
								"totalCost": "511141"
							},
							"external": {
								"executeCall(address,uint256,bytes)": "infinite",
								"isValidSignature(bytes32,bytes)": "infinite",
								"nonce()": "2315",
								"owner()": "infinite",
								"supportsInterface(bytes4)": "424",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 2618,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b42b45ad9f24b509a66119a7bbe5cd2f4c0aafb7b467cd53f3bf18bba5aa2f664736f6c63430008140033",
									".code": [
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "9E5D4C49"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "9E5D4C49"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "AFFED0E0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "1626BA7E"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2001,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2001,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2216,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2216,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 1818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1785,
											"end": 1818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1785,
											"end": 1818,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1623,
											"end": 1825,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1724,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1976,
											"end": 2050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1976,
											"end": 2050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1830,
											"end": 2056,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 860,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 860,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 860,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 831,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3771,
											"end": 3948,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 4180,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4180,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4216,
											"end": 4271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4271,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4271,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4213,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4272,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4315,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3953,
											"end": 4321,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2134,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2094,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8014073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2094,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2001,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2431,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2457,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2380,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2380,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B135D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2533,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2533,
											"end": 2574,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1842,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1907,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1879,
											"end": 1926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1879,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 1976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1976,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1946,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1946,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1946,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1985,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1043,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5144,
											"end": 5165,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5174,
											"end": 5204,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A37B5B2B71037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1126,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1166,
											"end": 1287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1287,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1166,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1594,
											"end": 1647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1634,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1625,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1638,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1625,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1594,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1594,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1565,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1565,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1204,
											"end": 1208,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1219,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1187,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1220,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1187,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1220,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1250,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1285,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1250,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1249,
											"end": 1376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1364,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1325,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1376,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1325,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1356,
											"end": 1374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1374,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "162544FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6598,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6641,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6328,
											"end": 6647,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2224,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2527,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2501,
											"end": 2527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2706,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2721,
											"name": "EXTCODECOPY",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 2739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2619,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2610,
											"end": 2632,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3059,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3104,
											"end": 3108,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3059,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2952,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3001,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3093,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3214,
											"end": 3230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3204,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2606,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 3249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 2247,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1789,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 2003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2017,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B135D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1986,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2105,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2239,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2105,
											"end": 2239,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B135D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2163,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2163,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2239,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2239,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 2247,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6797,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6633,
											"end": 6797,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6752,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6752,
											"end": 6782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6797,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6633,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6891,
											"end": 6905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7678,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7653,
											"end": 7678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7653,
											"end": 7678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7714,
											"end": 7731,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7731,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7732,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7732,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7741,
											"end": 7775,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7741,
											"end": 7775,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7741,
											"end": 7775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 7818,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 7818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 7818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7644,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7625,
											"end": 7644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6946,
											"end": 6966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6942,
											"end": 7055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7002,
											"end": 7031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6982,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6982,
											"end": 7044,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 7055,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6942,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 7121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 624,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 497,
											"end": 624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 568,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 553,
											"end": 556,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 549,
											"end": 569,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 570,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 613,
											"end": 617,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 618,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 706,
											"end": 712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 742,
											"end": 765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 738,
											"end": 770,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 735,
											"end": 787,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 819,
											"end": 828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 806,
											"end": 829,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 852,
											"end": 884,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 944,
											"end": 946,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 936,
											"end": 942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 933,
											"end": 947,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 930,
											"end": 964,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 930,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 950,
											"end": 962,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 930,
											"end": 964,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 987,
											"end": 996,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1014,
											"end": 1069,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1067,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1069,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1014,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1104,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1149,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1113,
											"end": 1149,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1129,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1207,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1276,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1250,
											"end": 1281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1286,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1299,
											"end": 1345,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1296,
											"end": 1368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1348,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1470,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1458,
											"end": 1460,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1471,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1435,
											"end": 1488,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1435,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1435,
											"end": 1488,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1484,
											"end": 1485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1435,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1435,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1510,
											"end": 1525,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1543,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1582,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1587,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 629,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2215,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2061,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2190,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2191,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2116,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2116,
											"end": 2209,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2195,
											"end": 2207,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2116,
											"end": 2209,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2116,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2383,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2405,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2353,
											"end": 2405,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2405,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2353,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2450,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2484,
											"end": 2489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2459,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2533,
											"end": 2565,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2533,
											"end": 2565,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2669,
											"end": 2683,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2683,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2683,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2700,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2666,
											"end": 2700,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2700,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2666,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2709,
											"end": 2741,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2709,
											"end": 2741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2768,
											"end": 2770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2764,
											"end": 2777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2799,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2803,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2870,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2887,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2853,
											"end": 2887,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2887,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2853,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2925,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2896,
											"end": 2953,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2896,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2896,
											"end": 2953,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2896,
											"end": 2953,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2896,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 3014,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 2982,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2220,
											"end": 3014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3269,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3019,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3122,
											"end": 3135,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3198,
											"end": 3216,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3196,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3196,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3178,
											"end": 3217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3114,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3243,
											"end": 3259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3236,
											"end": 3263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3274,
											"end": 3544,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3274,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3359,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3375,
											"end": 3378,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3456,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3449,
											"end": 3463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3396,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3472,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3396,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3505,
											"end": 3520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3531,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3531,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3488,
											"end": 3538,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3274,
											"end": 3544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3274,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3766,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3549,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3756,
											"end": 3758,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3754,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3716,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4414,
											"end": 4420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4471,
											"end": 4480,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4469,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4486,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4503,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4451,
											"end": 4503,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4497,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4503,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4451,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4538,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4560,
											"end": 4585,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4594,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4619,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4594,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4594,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4594,
											"end": 4625,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4594,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4668,
											"end": 4693,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4955,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4704,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4813,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4802,
											"end": 4825,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4830,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4847,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4795,
											"end": 4847,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4845,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4795,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4894,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5575,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 5494,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5446,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5513,
											"end": 5529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5513,
											"end": 5529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5805,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5580,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5679,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 5665,
											"end": 5799,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5721,
											"end": 5731,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5712,
											"end": 5732,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5760,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5746,
											"end": 5761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5788,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6196,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 6196,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6257,
											"end": 6267,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6248,
											"end": 6268,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6269,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6292,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6278,
											"end": 6293,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6309,
											"end": 6310,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6317,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6652,
											"end": 6940,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6652,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6827,
											"end": 6833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6863,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6843,
											"end": 6873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6930,
											"end": 6932,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6907,
											"end": 6913,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6890,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6890,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6890,
											"end": 6934,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6890,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6934,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6652,
											"end": 6940,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6945,
											"end": 7232,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 6945,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7187,
											"end": 7193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7182,
											"end": 7185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7163,
											"end": 7180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 7128,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6945,
											"end": 7232,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7421,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 7237,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7307,
											"end": 7313,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7363,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7380,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7328,
											"end": 7380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7376,
											"end": 7377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7366,
											"end": 7378,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7380,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7328,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"nonce()": "affed0e0",
							"owner()": "8da5cb5b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EthGlobal/smart-contract/example6551.sol\":\"ExampleERC6551Account\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"EthGlobal/smart-contract/example6551.sol\":{\"keccak256\":\"0xa7aca7f5cd6a7b4a284b165296e0c01062ec97d0819da5975d7730db1f773ea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07cf3549dc623d6b1343f46fde3eb687beb6b1739c773a3c957f7f28d7e7bbcd\",\"dweb:/ipfs/QmNNSPQJ2n466ZKgPeC5y3Xpp3BovTmpJS6C6LyUptqdjM\"]},\"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":{\"keccak256\":\"0x40ef4ee5697507566574eda36358a76b523b3dfe7cb65da1630004fe6c5a7a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95059c34a2fe249bede85fb523ff53eddf61e45fe76436201237f2eae73bc14c\",\"dweb:/ipfs/QmT6qbZsBzUS6Mpc9yAmhourUFC8TNpaF6vzxysyAKEcpN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x663d2f29666c52ec9f8b47965ed02d3c2ac0f6a3207a2af472771118958338b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab8401e321a76fcb4519757c96716adeb473c72a9d0cf8a235a59c42ccd3d986\",\"dweb:/ipfs/Qmah5yxkTJ99UzxBBaoxxiZJscP15cd8hvrRdJCb2mv5Xb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1fffbec76ddc32735c18799f454482cc2530d4b6736dda03c387813954df8e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569336974d289a84354700865eb6c025daac404c8509d24489b883def3cffa9d\",\"dweb:/ipfs/QmVekxbW3BgwMHrZjuXdPgSazk7SwXi2Usa1g7SdyZXiQ9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xf1488a92dbb847c34c590f58ec7e3ed561eae79a7fa6b0787e050afd884feffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2915b392be99bc4581380c27766730e577557e0ed622771d41ee74979a66d2\",\"dweb:/ipfs/QmdFgfX48EMnWeQti6pGede3h82Rve7Vt2a4VFBicWja1g\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]},\"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0xe974c53b1621a414029a22dbbeae11adeb4b23424d705253c36c8b51a2c662c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a946315dc6a556ab58d33218b786bf301d0a35bc255ef3ce7fced5eb7c4ad7\",\"dweb:/ipfs/QmUynQj6KfW1iJgWQcbkfcFaZB1pnd1pWRen2CPrQP6pfy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "EthGlobal/smart-contract/example6551.sol:ExampleERC6551Account",
								"label": "nonce",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol": {
				"Bytecode": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_size",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_end",
									"type": "uint256"
								}
							],
							"name": "InvalidCodeAtRange",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":58:2741  library Bytecode {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":58:2741  library Bytecode {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ec614fa336dff3d728910c0348a4a79f7da929affdaeba84ff01bddb12dffdc464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ec614fa336dff3d728910c0348a4a79f7da929affdaeba84ff01bddb12dffdc464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH2 0x4FA3 CALLDATASIZE 0xDF RETURN 0xD7 0x28 SWAP2 0xC SUB BASEFEE LOG4 0xA7 SWAP16 PUSH30 0xA929AFFDAEBA84FF01BDDB12DFFDC464736F6C6343000814003300000000 ",
							"sourceMap": "58:2683:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:2683:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ec614fa336dff3d728910c0348a4a79f7da929affdaeba84ff01bddb12dffdc464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH2 0x4FA3 CALLDATASIZE 0xDF RETURN 0xD7 0x28 SWAP2 0xC SUB BASEFEE LOG4 0xA7 SWAP16 PUSH30 0xA929AFFDAEBA84FF01BDDB12DFFDC464736F6C6343000814003300000000 ",
							"sourceMap": "58:2683:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"codeAt(address,uint256,uint256)": "infinite",
								"codeSize(address)": "infinite",
								"creationCodeFor(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec614fa336dff3d728910c0348a4a79f7da929affdaeba84ff01bddb12dffdc464736f6c63430008140033",
									".code": [
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":\"Bytecode\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol\":{\"keccak256\":\"0x40ef4ee5697507566574eda36358a76b523b3dfe7cb65da1630004fe6c5a7a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95059c34a2fe249bede85fb523ff53eddf61e45fe76436201237f2eae73bc14c\",\"dweb:/ipfs/QmT6qbZsBzUS6Mpc9yAmhourUFC8TNpaF6vzxysyAKEcpN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x663d2f29666c52ec9f8b47965ed02d3c2ac0f6a3207a2af472771118958338b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab8401e321a76fcb4519757c96716adeb473c72a9d0cf8a235a59c42ccd3d986\",\"dweb:/ipfs/Qmah5yxkTJ99UzxBBaoxxiZJscP15cd8hvrRdJCb2mv5Xb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":221:3057  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":221:3057  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c927ab9cc55a3cfebeab4102e4abb150aa197a83196536f9d6433a6a5cb376b964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c927ab9cc55a3cfebeab4102e4abb150aa197a83196536f9d6433a6a5cb376b964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x27 0xAB SWAP13 0xC5 GAS EXTCODECOPY INVALID 0xBE 0xAB COINBASE MUL 0xE4 0xAB 0xB1 POP 0xAA NOT PUSH27 0x83196536F9D6433A6A5CB376B964736F6C63430008140033000000 ",
							"sourceMap": "221:2836:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;221:2836:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c927ab9cc55a3cfebeab4102e4abb150aa197a83196536f9d6433a6a5cb376b964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x27 0xAB SWAP13 0xC5 GAS EXTCODECOPY INVALID 0xBE 0xAB COINBASE MUL 0xE4 0xAB 0xB1 POP 0xAA NOT PUSH27 0x83196536F9D6433A6A5CB376B964736F6C63430008140033000000 ",
							"sourceMap": "221:2836:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 3057,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c927ab9cc55a3cfebeab4102e4abb150aa197a83196536f9d6433a6a5cb376b964736f6c63430008140033",
									".code": [
										{
											"begin": 221,
											"end": 3057,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 221,
											"end": 3057,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":370:9814  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":370:9814  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c4734f8a60df66714a439e1599c3f7c9d5b4b57ab8d7fe330d597149b21481264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c4734f8a60df66714a439e1599c3f7c9d5b4b57ab8d7fe330d597149b21481264736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SELFBALANCE CALLVALUE 0xF8 0xA6 0xD 0xF6 PUSH8 0x14A439E1599C3F7C SWAP14 JUMPDEST 0x4B JUMPI 0xAB DUP14 PUSH32 0xE330D597149B21481264736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "370:9444:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:9444:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c4734f8a60df66714a439e1599c3f7c9d5b4b57ab8d7fe330d597149b21481264736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SELFBALANCE CALLVALUE 0xF8 0xA6 0xD 0xF6 PUSH8 0x14A439E1599C3F7C SWAP14 JUMPDEST 0x4B JUMPI 0xAB DUP14 PUSH32 0xE330D597149B21481264736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "370:9444:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9814,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c4734f8a60df66714a439e1599c3f7c9d5b4b57ab8d7fe330d597149b21481264736f6c63430008140033",
									".code": [
										{
											"begin": 370,
											"end": 9814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 370,
											"end": 9814,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1fffbec76ddc32735c18799f454482cc2530d4b6736dda03c387813954df8e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569336974d289a84354700865eb6c025daac404c8509d24489b883def3cffa9d\",\"dweb:/ipfs/QmVekxbW3BgwMHrZjuXdPgSazk7SwXi2Usa1g7SdyZXiQ9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"details": "Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":507:2249  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":507:2249  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204dec44dd8f9d37c29b0e9cb32dba37d18190026f35c74a95728e472d1ef301a664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204dec44dd8f9d37c29b0e9cb32dba37d18190026f35c74a95728e472d1ef301a664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xEC PREVRANDAO 0xDD DUP16 SWAP14 CALLDATACOPY 0xC2 SWAP12 0xE SWAP13 0xB3 0x2D 0xBA CALLDATACOPY 0xD1 DUP2 SWAP1 MUL PUSH16 0x35C74A95728E472D1EF301A664736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "507:1742:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;507:1742:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204dec44dd8f9d37c29b0e9cb32dba37d18190026f35c74a95728e472d1ef301a664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xEC PREVRANDAO 0xDD DUP16 SWAP14 CALLDATACOPY 0xC2 SWAP12 0xE SWAP13 0xB3 0x2D 0xBA CALLDATACOPY 0xD1 DUP2 SWAP1 MUL PUSH16 0x35C74A95728E472D1EF301A664736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "507:1742:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"isValidERC1271SignatureNow(address,bytes32,bytes memory)": "infinite",
								"isValidSignatureNow(address,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 507,
									"end": 2249,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204dec44dd8f9d37c29b0e9cb32dba37d18190026f35c74a95728e472d1ef301a664736f6c63430008140033",
									".code": [
										{
											"begin": 507,
											"end": 2249,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 2249,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x663d2f29666c52ec9f8b47965ed02d3c2ac0f6a3207a2af472771118958338b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab8401e321a76fcb4519757c96716adeb473c72a9d0cf8a235a59c42ccd3d986\",\"dweb:/ipfs/Qmah5yxkTJ99UzxBBaoxxiZJscP15cd8hvrRdJCb2mv5Xb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1fffbec76ddc32735c18799f454482cc2530d4b6736dda03c387813954df8e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569336974d289a84354700865eb6c025daac404c8509d24489b883def3cffa9d\",\"dweb:/ipfs/QmVekxbW3BgwMHrZjuXdPgSazk7SwXi2Usa1g7SdyZXiQ9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xf1488a92dbb847c34c590f58ec7e3ed561eae79a7fa6b0787e050afd884feffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2915b392be99bc4581380c27766730e577557e0ed622771d41ee74979a66d2\",\"dweb:/ipfs/QmdFgfX48EMnWeQti6pGede3h82Rve7Vt2a4VFBicWja1g\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15067  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15067  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc888f413daefdb03c555503fb38299f14522bf7c7c57452173103b3b9e800e864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bc888f413daefdb03c555503fb38299f14522bf7c7c57452173103b3b9e800e864736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DUP9 DUP16 COINBASE RETURNDATASIZE 0xAE REVERT 0xB0 EXTCODECOPY SSTORE SSTORE SUB 0xFB CODESIZE 0x29 SWAP16 EQ MSTORE 0x2B 0xF7 0xC7 0xC5 PUSH21 0x52173103B3B9E800E864736F6C6343000814003300 ",
							"sourceMap": "203:14864:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14864:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bc888f413daefdb03c555503fb38299f14522bf7c7c57452173103b3b9e800e864736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DUP9 DUP16 COINBASE RETURNDATASIZE 0xAE REVERT 0xB0 EXTCODECOPY SSTORE SSTORE SUB 0xFB CODESIZE 0x29 SWAP16 EQ MSTORE 0x2B 0xF7 0xC7 0xC5 PUSH21 0x52173103B3B9E800E864736F6C6343000814003300 ",
							"sourceMap": "203:14864:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15067,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc888f413daefdb03c555503fb38299f14522bf7c7c57452173103b3b9e800e864736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15067,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15067,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204597d1825063ee10293d5fe00c5639ba6454b5004c143f5b4c29a6fd4959856364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204597d1825063ee10293d5fe00c5639ba6454b5004c143f5b4c29a6fd4959856364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP8 0xD1 DUP3 POP PUSH4 0xEE10293D PUSH0 0xE0 0xC JUMP CODECOPY 0xBA PUSH5 0x54B5004C14 EXTCODEHASH JUMPDEST 0x4C 0x29 0xA6 REVERT 0x49 MSIZE DUP6 PUSH4 0x64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204597d1825063ee10293d5fe00c5639ba6454b5004c143f5b4c29a6fd4959856364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP8 0xD1 DUP3 POP PUSH4 0xEE10293D PUSH0 0xE0 0xC JUMP CODECOPY 0xBA PUSH5 0x54B5004C14 EXTCODEHASH JUMPDEST 0x4C 0x29 0xA6 REVERT 0x49 MSIZE DUP6 PUSH4 0x64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204597d1825063ee10293d5fe00c5639ba6454b5004c143f5b4c29a6fd4959856364736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"EthGlobal/smart-contract/example6551.sol",
								"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol": {
				"IERC6551Account": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "the ERC-165 identifier for this interface is `0xeff4d378`",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"nonce()": "affed0e0",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0xeff4d378`\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0xe974c53b1621a414029a22dbbeae11adeb4b23424d705253c36c8b51a2c662c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a946315dc6a556ab58d33218b786bf301d0a35bc255ef3ce7fced5eb7c4ad7\",\"dweb:/ipfs/QmUynQj6KfW1iJgWQcbkfcFaZB1pnd1pWRen2CPrQP6pfy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC6551AccountProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0xe974c53b1621a414029a22dbbeae11adeb4b23424d705253c36c8b51a2c662c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a946315dc6a556ab58d33218b786bf301d0a35bc255ef3ce7fced5eb7c4ad7\",\"dweb:/ipfs/QmUynQj6KfW1iJgWQcbkfcFaZB1pnd1pWRen2CPrQP6pfy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"EthGlobal/smart-contract/example6551.sol": {
				"ast": {
					"absolutePath": "EthGlobal/smart-contract/example6551.sol",
					"exportedSymbols": {
						"Bytecode": [
							298
						],
						"ECDSA": [
							1093
						],
						"ExampleERC6551Account": [
							186
						],
						"IERC1271": [
							312
						],
						"IERC165": [
							1204
						],
						"IERC6551Account": [
							2397
						],
						"IERC6551AccountProxy": [
							2354
						],
						"IERC721": [
							428
						],
						"Math": [
							2241
						],
						"SignatureChecker": [
							1192
						],
						"SignedMath": [
							2346
						],
						"Strings": [
							681
						]
					},
					"id": 187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 1205,
							"src": "60:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 429,
							"src": "180:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 313,
							"src": "293:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 1193,
							"src": "405:126:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
							"file": "https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 299,
							"src": "533:88:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
							"file": "https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 2398,
							"src": "623:91:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "IERC165",
										"nameLocations": [
											"752:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1204,
										"src": "752:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "752:7:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC1271",
										"nameLocations": [
											"761:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 312,
										"src": "761:8:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "761:8:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IERC6551Account",
										"nameLocations": [
											"771:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2397,
										"src": "771:15:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "771:15:0"
								}
							],
							"canonicalName": "ExampleERC6551Account",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 186,
							"linearizedBaseContracts": [
								186,
								2397,
								312,
								1204
							],
							"name": "ExampleERC6551Account",
							"nameLocation": "727:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2366
									],
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "821:2:0",
										"statements": []
									},
									"id": 17,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:0:0"
									},
									"scope": 186,
									"src": "794:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2396
									],
									"constant": false,
									"functionSelector": "affed0e0",
									"id": 19,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "846:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 186,
									"src": "831:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "831:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2377
									],
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1010:284:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1029:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1033:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1029:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 33,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1043:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1043:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1029:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746f6b656e206f776e6572",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1052:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															},
															"value": "Not token owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1021:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1021:49:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1088:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1083:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 39,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1083:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"nodeType": "VariableDeclarationStatement",
												"src": "1083:12:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 42,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1107:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 43,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1116:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 44,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1106:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 49,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"id": 45,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1126:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1129:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "1126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 47,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1141:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "1126:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1126:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "1106:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1106:47:0"
											},
											{
												"condition": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1170:8:0",
													"subExpression": {
														"id": 53,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "IfStatement",
												"src": "1166:121:0",
												"trueBody": {
													"id": 56,
													"nodeType": "Block",
													"src": "1180:107:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1204:72:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "1234:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1242:2:0",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1230:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1230:15:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "1253:6:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1247:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1247:13:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:38:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:38:0"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 28,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1234:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 28,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1253:6:0",
																	"valueSize": 1
																}
															],
															"id": 55,
															"nodeType": "InlineAssembly",
															"src": "1195:81:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9e5d4c49",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "869:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "899:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "891:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "920:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "912:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "951:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "936:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 24,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "936:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:82:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1002:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "989:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "989:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:21:0"
									},
									"scope": 186,
									"src": "860:434:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2386
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1481:235:0",
										"statements": [
											{
												"assignments": [
													69
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1500:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 99,
														"src": "1492:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 68,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"expression": {
														"expression": {
															"arguments": [
																{
																	"id": 72,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1517:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ExampleERC6551Account_$186",
																		"typeString": "contract ExampleERC6551Account"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ExampleERC6551Account_$186",
																		"typeString": "contract ExampleERC6551Account"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1509:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1509:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1523:4:0",
														"memberName": "code",
														"nodeType": "MemberAccess",
														"src": "1509:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1528:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1509:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1492:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 83,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1618:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ExampleERC6551Account_$186",
																				"typeString": "contract ExampleERC6551Account"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ExampleERC6551Account_$186",
																				"typeString": "contract ExampleERC6551Account"
																			}
																		],
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1610:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 81,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1610:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1610:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 85,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "1625:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "30783630",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1634:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "0x60"
																	},
																	"src": "1625:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 88,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "1640:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 79,
																	"name": "Bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "1594:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Bytecode_$298_$",
																		"typeString": "type(library Bytecode)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1603:6:0",
																"memberName": "codeAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 297,
																"src": "1594:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (address,uint256,uint256) view returns (bytes memory)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1594:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1667:7:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1676:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1676:7:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 94,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1685:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 96,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1666:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 77,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1565:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1569:6:0",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1565:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1565:143:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(uint256,address payable,uint256)"
													}
												},
												"functionReturnParameters": 67,
												"id": 98,
												"nodeType": "Return",
												"src": "1545:163:0"
											}
										]
									},
									"functionSelector": "fc0c546a",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "1311:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "1421:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1413:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1457:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1449:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:107:0"
									},
									"scope": 186,
									"src": "1302:414:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2391
									],
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1771:222:0",
										"statements": [
											{
												"assignments": [
													106,
													108,
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "1791:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1783:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "tokenContract",
														"nameLocation": "1808:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1800:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 107,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1800:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1831:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1823:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 111,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1842:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ExampleERC6551Account_$186",
																"typeString": "contract ExampleERC6551Account"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1861:5:0",
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "1842:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,address,uint256)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1782:86:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 115,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 116,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1900:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "1894:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1879:47:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1916:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1916:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"functionReturnParameters": 104,
													"id": 123,
													"nodeType": "Return",
													"src": "1909:17:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"name": "tokenContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1954:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 125,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "1946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$428_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$428",
																"typeString": "contract IERC721"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1969:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 361,
														"src": "1946:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1946:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 104,
												"id": 131,
												"nodeType": "Return",
												"src": "1939:46:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1733:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:9:0"
									},
									"scope": 186,
									"src": "1724:269:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2075:133:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2094:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 142,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1204,
																				"src": "2114:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$1204_$",
																					"typeString": "type(contract IERC165)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$1204_$",
																					"typeString": "type(contract IERC165)"
																				}
																			],
																			"id": 141,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "2109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2109:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1204",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2123:11:0",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "2109:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2094:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 146,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2151:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 148,
																				"name": "IERC6551Account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2397,
																				"src": "2171:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2397_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2397_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			],
																			"id": 147,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "2166:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2166:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6551Account_$2397",
																			"typeString": "type(contract IERC6551Account)"
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2188:11:0",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "2166:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2151:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2094:105:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 153,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2093:107:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 139,
												"id": 154,
												"nodeType": "Return",
												"src": "2086:114:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2010:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2035:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2028:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 134,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:20:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:6:0"
									},
									"scope": 186,
									"src": "2001:207:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										311
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "2354:261:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "2370:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "2365:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 165,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 169,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2431:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2431:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 171,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 172,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2472:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 167,
															"name": "SignatureChecker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "2380:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$1192_$",
																"typeString": "type(library SignatureChecker)"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2397:19:0",
														"memberName": "isValidSignatureNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1139,
														"src": "2380:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:127:0"
											},
											{
												"condition": {
													"id": 175,
													"name": "isValid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "IfStatement",
												"src": "2505:81:0",
												"trueBody": {
													"id": 180,
													"nodeType": "Block",
													"src": "2518:68:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"expression": {
																		"id": 176,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "2540:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$312_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2549:16:0",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "2540:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2566:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "2540:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 164,
															"id": 179,
															"nodeType": "Return",
															"src": "2533:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "",
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2605:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 164,
												"id": 183,
												"nodeType": "Return",
												"src": "2598:9:0"
											}
										]
									},
									"functionSelector": "1626ba7e",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "2225:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2250:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2242:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2269:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2256:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2241:38:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "2337:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2330:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 162,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:19:0"
									},
									"scope": 186,
									"src": "2216:399:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 187,
							"src": "718:1900:0",
							"usedErrors": [
								196
							],
							"usedEvents": [
								2363
							]
						}
					],
					"src": "32:2586:0"
				},
				"id": 0
			},
			"https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol": {
				"ast": {
					"absolutePath": "https://github.com/0xsequence/sstore2/blob/master/contracts/utils/Bytecode.sol",
					"exportedSymbols": {
						"Bytecode": [
							298
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bytecode",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "Bytecode",
							"nameLocation": "66:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2c4a89fa",
									"id": 196,
									"name": "InvalidCodeAtRange",
									"nameLocation": "85:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_size",
												"nameLocation": "112:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "104:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "119:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_end",
												"nameLocation": "143:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "135:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:45:1"
									},
									"src": "79:70:1"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "460:618:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "63",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
																"typeString": "literal_string \"c\""
															},
															"value": "c"
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 209,
																		"name": "_code",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "1002:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1008:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1002:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "995:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 207,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "995:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "995:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"hexValue": "80600e6000396000f3",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1023:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e",
																"typeString": "literal_string hex\"80600e6000396000f3\""
															}
														},
														{
															"id": 213,
															"name": "_code",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1062:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
																"typeString": "literal_string \"c\""
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e",
																"typeString": "literal_string hex\"80600e6000396000f3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 204,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "956:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "960:12:1",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "956:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:117:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 215,
												"nodeType": "Return",
												"src": "949:124:1"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "153:222:1",
										"text": "@notice Generate a creation code that results on a contract with `_code` as bytecode\n@param _code The returning value of the resulting `creationCode`\n@return creationCode (constructor) for new contract"
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creationCodeFor",
									"nameLocation": "387:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "403:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "403:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:20:1"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "446:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "446:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:14:1"
									},
									"scope": 298,
									"src": "378:700:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1331:49:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1346:30:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1348:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1356:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1356:18:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1348:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 220,
														"isOffset": false,
														"isSlot": false,
														"src": "1368:5:1",
														"valueSize": 1
													},
													{
														"declaration": 223,
														"isOffset": false,
														"isSlot": false,
														"src": "1348:4:1",
														"valueSize": 1
													}
												],
												"id": 225,
												"nodeType": "InlineAssembly",
												"src": "1337:39:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1082:176:1",
										"text": "@notice Returns the size of the code on a given address\n@param _addr Address that may or may not contain code\n@return size of the code on the given `_addr`"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "codeSize",
									"nameLocation": "1270:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:15:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "1325:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1317:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:14:1"
									},
									"scope": 298,
									"src": "1261:119:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1897:842:1",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "csize",
														"nameLocation": "1911:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "1903:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1928:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 241,
														"name": "codeSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1919:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1903:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "csize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "1944:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1953:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1944:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "1940:32:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "",
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1969:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1963:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 248,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1963:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1963:9:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 238,
													"id": 252,
													"nodeType": "Return",
													"src": "1956:16:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1983:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 255,
														"name": "csize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "1992:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"nodeType": "IfStatement",
												"src": "1979:36:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2012:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 257,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2006:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2006:9:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 238,
													"id": 261,
													"nodeType": "Return",
													"src": "1999:16:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "_end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2025:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 264,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2032:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2025:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "IfStatement",
												"src": "2021:65:1",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 267,
																"name": "csize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2066:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 268,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2073:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 269,
																"name": "_end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2081:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 266,
															"name": "InvalidCodeAtRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2047:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,uint256,uint256) pure"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2047:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 271,
													"nodeType": "RevertStatement",
													"src": "2040:46:1"
												}
											},
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "2094:641:1",
												"statements": [
													{
														"assignments": [
															274
														],
														"declarations": [
															{
																"constant": false,
																"id": 274,
																"mutability": "mutable",
																"name": "reqSize",
																"nameLocation": "2120:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "2112:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2112:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 278,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "_end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2130:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 276,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2137:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2130:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2112:31:1"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "maxSize",
																"nameLocation": "2159:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "2151:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2151:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "csize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2169:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2177:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2169:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2151:32:1"
													},
													{
														"assignments": [
															286
														],
														"declarations": [
															{
																"constant": false,
																"id": 286,
																"mutability": "mutable",
																"name": "size",
																"nameLocation": "2200:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "2192:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2192:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 293,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 287,
																	"name": "maxSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "2207:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 288,
																	"name": "reqSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "2217:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 291,
																"name": "reqSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2237:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2207:37:1",
															"trueExpression": {
																"id": 290,
																"name": "maxSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2227:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2192:52:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2262:467:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "2398:20:1",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2413:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2407:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2407:11:1"
																	},
																	"variableNames": [
																		{
																			"name": "oCode",
																			"nodeType": "YulIdentifier",
																			"src": "2398:5:1"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2480:4:1",
																				"type": "",
																				"value": "0x40"
																			},
																			{
																				"arguments": [
																					{
																						"name": "oCode",
																						"nodeType": "YulIdentifier",
																						"src": "2490:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "size",
																												"nodeType": "YulIdentifier",
																												"src": "2509:4:1"
																											},
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "2515:4:1",
																												"type": "",
																												"value": "0x20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2505:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2505:15:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2522:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2501:26:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2533:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2529:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2529:9:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2497:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2497:42:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2486:54:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2473:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2473:68:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2473:68:1"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "oCode",
																				"nodeType": "YulIdentifier",
																				"src": "2591:5:1"
																			},
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2598:4:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2584:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2584:19:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2584:19:1"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "_addr",
																				"nodeType": "YulIdentifier",
																				"src": "2683:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "oCode",
																						"nodeType": "YulIdentifier",
																						"src": "2694:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2701:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2690:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2690:16:1"
																			},
																			{
																				"name": "_start",
																				"nodeType": "YulIdentifier",
																				"src": "2708:6:1"
																			},
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2716:4:1"
																			}
																		],
																		"functionName": {
																			"name": "extcodecopy",
																			"nodeType": "YulIdentifier",
																			"src": "2671:11:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:50:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2671:50:1"
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 230,
																"isOffset": false,
																"isSlot": false,
																"src": "2683:5:1",
																"valueSize": 1
															},
															{
																"declaration": 232,
																"isOffset": false,
																"isSlot": false,
																"src": "2708:6:1",
																"valueSize": 1
															},
															{
																"declaration": 237,
																"isOffset": false,
																"isSlot": false,
																"src": "2398:5:1",
																"valueSize": 1
															},
															{
																"declaration": 237,
																"isOffset": false,
																"isSlot": false,
																"src": "2490:5:1",
																"valueSize": 1
															},
															{
																"declaration": 237,
																"isOffset": false,
																"isSlot": false,
																"src": "2591:5:1",
																"valueSize": 1
															},
															{
																"declaration": 237,
																"isOffset": false,
																"isSlot": false,
																"src": "2694:5:1",
																"valueSize": 1
															},
															{
																"declaration": 286,
																"isOffset": false,
																"isSlot": false,
																"src": "2509:4:1",
																"valueSize": 1
															},
															{
																"declaration": 286,
																"isOffset": false,
																"isSlot": false,
																"src": "2598:4:1",
																"valueSize": 1
															},
															{
																"declaration": 286,
																"isOffset": false,
																"isSlot": false,
																"src": "2716:4:1",
																"valueSize": 1
															}
														],
														"id": 294,
														"nodeType": "InlineAssembly",
														"src": "2253:476:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1384:406:1",
										"text": "@notice Returns the code of a given address\n@dev It will fail if `_end < _start`\n@param _addr Address that may or may not contain code\n@param _start number of bytes of code to skip on read\n@param _end index before which to end extraction\n@return oCode read from `_addr` deployed bytecode\nForked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "codeAt",
									"nameLocation": "1802:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "1832:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1824:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_end",
												"nameLocation": "1848:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1840:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:45:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "oCode",
												"nameLocation": "1890:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1877:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1877:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:20:1"
									},
									"scope": 298,
									"src": "1793:946:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 299,
							"src": "58:2683:1",
							"usedErrors": [
								196
							],
							"usedEvents": []
						}
					],
					"src": "32:2710:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							312
						]
					},
					"id": 313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "92:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "118:189:2",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 312,
							"linearizedBaseContracts": [
								312
							],
							"name": "IERC1271",
							"nameLocation": "318:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "333:220:2",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "567:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "592:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "584:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "611:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "598:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "598:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:38:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "652:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "645:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:19:2"
									},
									"scope": 312,
									"src": "558:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 313,
							"src": "308:358:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "92:575:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1204
						],
						"IERC721": [
							428
						]
					},
					"id": 429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 429,
							"sourceUnit": 1205,
							"src": "134:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 317,
										"name": "IERC165",
										"nameLocations": [
											"272:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1204,
										"src": "272:7:3"
									},
									"id": 318,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "183:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 428,
							"linearizedBaseContracts": [
								428,
								1204
							],
							"name": "IERC721",
							"nameLocation": "261:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "286:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 327,
									"name": "Transfer",
									"nameLocation": "385:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "410:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "394:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "432:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "416:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "452:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "436:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:67:3"
									},
									"src": "379:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "467:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 336,
									"name": "Approval",
									"nameLocation": "572:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "597:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "581:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "620:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "604:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "646:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "630:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:74:3"
									},
									"src": "566:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "661:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 345,
									"name": "ApprovalForAll",
									"nameLocation": "789:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "820:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "804:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "843:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "827:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "853:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:64:3"
									},
									"src": "783:85:3"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "874:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "964:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "982:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "974:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:17:3"
									},
									"scope": 428,
									"src": "955:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1035:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1180:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1196:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1188:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:17:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1236:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1228:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:15:3"
									},
									"scope": 428,
									"src": "1171:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1249:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1819:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1844:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1836:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1858:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1850:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1870:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1862:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1894:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1879:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1879:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:64:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:3"
									},
									"scope": 428,
									"src": "1810:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1915:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2616:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2641:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2633:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2655:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2647:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2667:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2659:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:43:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:0:3"
									},
									"scope": 428,
									"src": "2607:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2691:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3437:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3458:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3450:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3472:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3464:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3484:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3476:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:43:3"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3501:0:3"
									},
									"scope": 428,
									"src": "3428:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "3508:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3974:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3990:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3982:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4002:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3994:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:29:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4019:0:3"
									},
									"scope": 428,
									"src": "3965:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "4026:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4349:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4375:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4367:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4390:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4385:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4385:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:33:3"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:0:3"
									},
									"scope": 428,
									"src": "4340:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "4415:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4568:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4588:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4580:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4579:17:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4628:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4620:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4619:18:3"
									},
									"scope": 428,
									"src": "4559:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "4644:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4821:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4813:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4836:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4828:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:33:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4869:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4869:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:6:3"
									},
									"scope": 428,
									"src": "4787:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 429,
							"src": "251:4626:3",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:4770:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2241
						],
						"SignedMath": [
							2346
						],
						"Strings": [
							681
						]
					},
					"id": 682,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 2242,
							"src": "127:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 2347,
							"src": "153:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "186:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 681,
							"linearizedBaseContracts": [
								681
							],
							"name": "Strings",
							"nameLocation": "229:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 436,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "268:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "243:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 434,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 439,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "326:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 681,
									"src": "303:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 437,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "303:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "344:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "353:81:4",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 446,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "445:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "482:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "497:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "489:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:31:4"
									},
									"src": "439:66:4"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "677:625:4",
										"statements": [
											{
												"id": 492,
												"nodeType": "UncheckedBlock",
												"src": "687:609:4",
												"statements": [
													{
														"assignments": [
															455
														],
														"declarations": [
															{
																"constant": false,
																"id": 455,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "719:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 492,
																"src": "711:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 454,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 462,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 458,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "739:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 456,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "728:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2241_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "733:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2078,
																	"src": "728:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "728:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "728:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:38:4"
													},
													{
														"assignments": [
															464
														],
														"declarations": [
															{
																"constant": false,
																"id": 464,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "777:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 492,
																"src": "763:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 463,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "763:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 469,
														"initialValue": {
															"arguments": [
																{
																	"id": 467,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "797:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "786:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 465,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "790:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "786:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "763:41:4"
													},
													{
														"assignments": [
															471
														],
														"declarations": [
															{
																"constant": false,
																"id": 471,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "826:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 492,
																"src": "818:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 470,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "818:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 472,
														"nodeType": "VariableDeclarationStatement",
														"src": "818:11:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "899:67:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "917:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "940:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:4",
																"valueSize": 1
															},
															{
																"declaration": 455,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:4",
																"valueSize": 1
															},
															{
																"declaration": 471,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:4",
																"valueSize": 1
															}
														],
														"id": 473,
														"nodeType": "InlineAssembly",
														"src": "890:76:4"
													},
													{
														"body": {
															"id": 488,
															"nodeType": "Block",
															"src": "992:267:4",
															"statements": [
																{
																	"expression": {
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:4",
																		"subExpression": {
																			"id": 475,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "1010:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 477,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:4"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1093:84:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1123:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1137:5:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1144:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1133:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1133:14:4"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1149:8:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1128:4:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1128:30:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1115:7:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1115:44:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1115:44:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 436,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1149:8:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 471,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1123:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 449,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1137:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 478,
																	"nodeType": "InlineAssembly",
																	"src": "1084:93:4"
																},
																{
																	"expression": {
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 479,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "1194:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1194:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 482,
																	"nodeType": "ExpressionStatement",
																	"src": "1194:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "1227:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 487,
																	"nodeType": "IfStatement",
																	"src": "1223:21:4",
																	"trueBody": {
																		"id": 486,
																		"nodeType": "Break",
																		"src": "1239:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 489,
														"nodeType": "WhileStatement",
														"src": "979:280:4"
													},
													{
														"expression": {
															"id": 490,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "1279:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 453,
														"id": 491,
														"nodeType": "Return",
														"src": "1272:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "511:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "615:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "624:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:15:4"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "662:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:15:4"
									},
									"scope": 681,
									"src": "606:696:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1478:92:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 505,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "1509:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1517:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1509:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1527:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1509:20:4",
															"trueExpression": {
																"hexValue": "2d",
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1521:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 514,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "1555:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 512,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "1540:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2346_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1551:3:4",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2345,
																		"src": "1540:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1540:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 511,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "1531:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1531:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1495:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 502,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1495:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1502:6:4",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1495:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 501,
												"id": 518,
												"nodeType": "Return",
												"src": "1488:75:4"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1308:89:4",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1411:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1426:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 496,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1425:14:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1463:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1463:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:15:4"
									},
									"scope": 681,
									"src": "1402:168:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1749:100:4",
										"statements": [
											{
												"id": 538,
												"nodeType": "UncheckedBlock",
												"src": "1759:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "1802:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 532,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "1821:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 530,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2241,
																				"src": "1809:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2241_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1814:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2201,
																			"src": "1809:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1809:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1830:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1809:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 528,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	540,
																	623,
																	643
																],
																"referencedDeclaration": 623,
																"src": "1790:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1790:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 527,
														"id": 537,
														"nodeType": "Return",
														"src": "1783:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "1576:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1684:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1704:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1696:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:15:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1734:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:15:4"
									},
									"scope": 681,
									"src": "1675:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2062:433:4",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2080:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2072:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"id": 552,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 543,
													"src": "2093:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2072:26:4"
											},
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2121:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2108:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 554,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2108:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2140:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 559,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2144:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2140:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2153:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2140:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2130:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 556,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:47:4"
											},
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 565,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2165:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 567,
														"indexExpression": {
															"hexValue": "30",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2165:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2177:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2165:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "2165:15:4"
											},
											{
												"expression": {
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 571,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2190:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 573,
														"indexExpression": {
															"hexValue": "31",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2197:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2190:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2202:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2190:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "2190:15:4"
											},
											{
												"body": {
													"id": 605,
													"nodeType": "Block",
													"src": "2260:93:4",
													"statements": [
														{
															"expression": {
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 591,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "2274:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 593,
																	"indexExpression": {
																		"id": 592,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "2281:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2274:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 594,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2286:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 598,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 595,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "2295:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2308:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2295:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2286:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2274:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "2274:38:4"
														},
														{
															"expression": {
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 601,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "2326:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2341:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2326:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 604,
															"nodeType": "ExpressionStatement",
															"src": "2326:16:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2248:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2252:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2248:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"initializationExpression": {
													"assignments": [
														578
													],
													"declarations": [
														{
															"constant": false,
															"id": 578,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2228:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 606,
															"src": "2220:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 577,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 584,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2232:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 580,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "2236:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2232:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2245:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2232:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2220:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2255:3:4",
														"subExpression": {
															"id": 588,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "2257:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 590,
													"nodeType": "ExpressionStatement",
													"src": "2255:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2215:138:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "2366:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2380:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2366:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "2362:96:4",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "2383:75:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 611,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 543,
																		"src": "2433:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 612,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "2440:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 610,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "2404:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2404:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 614,
															"nodeType": "RevertStatement",
															"src": "2397:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2481:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2474:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 617,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2474:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 549,
												"id": 621,
												"nodeType": "Return",
												"src": "2467:21:4"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "1855:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1981:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2001:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1993:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2016:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2008:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:31:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2047:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2047:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:15:4"
									},
									"scope": 681,
									"src": "1972:523:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "2720:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 636,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "2765:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2757:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 634,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2757:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2757:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2749:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 632,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2749:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2749:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 639,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2773:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 631,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															540,
															623,
															643
														],
														"referencedDeclaration": 623,
														"src": "2737:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 630,
												"id": 641,
												"nodeType": "Return",
												"src": "2730:59:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "2501:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2656:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2676:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2668:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:14:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2705:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2705:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:15:4"
									},
									"scope": 681,
									"src": "2647:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2951:104:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "2974:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2968:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2968:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2968:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2977:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2968:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "2993:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2987:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2987:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2987:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2996:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2987:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 667,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "3022:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3016:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 665,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3016:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3016:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 664,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3006:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3006:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 673,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "3045:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3039:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 671,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3039:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3039:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 670,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3029:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3029:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3006:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2968:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 652,
												"id": 678,
												"nodeType": "Return",
												"src": "2961:87:4"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "2802:66:4",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2882:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2902:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2888:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2919:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2905:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2905:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:34:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2945:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2945:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2944:6:4"
									},
									"scope": 681,
									"src": "2873:182:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 682,
							"src": "221:2836:4",
							"usedErrors": [
								446
							],
							"usedEvents": []
						}
					],
					"src": "101:2957:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1093
						],
						"Math": [
							2241
						],
						"SignedMath": [
							2346
						],
						"Strings": [
							681
						]
					},
					"id": 1094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 683,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 682,
							"src": "138:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 685,
								"nodeType": "StructuredDocumentation",
								"src": "164:205:5",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1093,
							"linearizedBaseContracts": [
								1093
							],
							"name": "ECDSA",
							"nameLocation": "378:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 690,
									"members": [
										{
											"id": 686,
											"name": "NoError",
											"nameLocation": "418:7:5",
											"nodeType": "EnumValue",
											"src": "418:7:5"
										},
										{
											"id": 687,
											"name": "InvalidSignature",
											"nameLocation": "435:16:5",
											"nodeType": "EnumValue",
											"src": "435:16:5"
										},
										{
											"id": 688,
											"name": "InvalidSignatureLength",
											"nameLocation": "461:22:5",
											"nodeType": "EnumValue",
											"src": "461:22:5"
										},
										{
											"id": 689,
											"name": "InvalidSignatureS",
											"nameLocation": "493:17:5",
											"nodeType": "EnumValue",
											"src": "493:17:5"
										}
									],
									"name": "RecoverError",
									"nameLocation": "395:12:5",
									"nodeType": "EnumDefinition",
									"src": "390:126:5"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "522:63:5",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 693,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "596:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:5"
									},
									"src": "590:30:5"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "626:60:5",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 698,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "697:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "733:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "725:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:16:5"
									},
									"src": "691:50:5"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "747:85:5",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 703,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "843:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "874:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "866:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 700,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:11:5"
									},
									"src": "837:40:5"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "955:460:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$690",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "969:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 712,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "978:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "991:7:5",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "978:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "969:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 717,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "1065:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 718,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1074:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1087:16:5",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 687,
															"src": "1074:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "1065:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "1170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$690",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 726,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1179:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1192:22:5",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 688,
																"src": "1179:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$690",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "1170:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$690",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 737,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "1304:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$690",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 738,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "1313:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1326:17:5",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "1313:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$690",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "1304:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 746,
															"nodeType": "IfStatement",
															"src": "1300:109:5",
															"trueBody": {
																"id": 745,
																"nodeType": "Block",
																"src": "1345:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 742,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "1389:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 741,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 703,
																				"src": "1366:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1366:32:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 744,
																		"nodeType": "RevertStatement",
																		"src": "1359:39:5"
																	}
																]
															}
														},
														"id": 747,
														"nodeType": "IfStatement",
														"src": "1166:243:5",
														"trueBody": {
															"id": 736,
															"nodeType": "Block",
															"src": "1216:78:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 732,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 708,
																						"src": "1273:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1265:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 730,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1265:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1265:17:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "1237:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1237:46:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 735,
																	"nodeType": "RevertStatement",
																	"src": "1230:53:5"
																}
															]
														}
													},
													"id": 748,
													"nodeType": "IfStatement",
													"src": "1061:348:5",
													"trueBody": {
														"id": 724,
														"nodeType": "Block",
														"src": "1105:55:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 721,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "1126:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1126:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 723,
																"nodeType": "RevertStatement",
																"src": "1119:30:5"
															}
														]
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "965:444:5",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "1000:55:5",
													"statements": [
														{
															"functionReturnParameters": 710,
															"id": 715,
															"nodeType": "Return",
															"src": "1014:7:5"
														}
													]
												}
											}
										]
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "892:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "917:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "904:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$690",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 704,
														"name": "RecoverError",
														"nameLocations": [
															"904:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "904:12:5"
													},
													"referencedDeclaration": 690,
													"src": "904:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$690",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "932:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "924:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:38:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:0:5"
									},
									"scope": 1093,
									"src": "883:532:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "2596:653:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 766,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "2610:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2620:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2610:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2630:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2610:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "3135:108:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3165:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3157:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 788,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3157:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3157:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 792,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "3169:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3182:22:5",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 688,
																		"src": "3169:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$690",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 796,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 756,
																					"src": "3214:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3224:6:5",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3214:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3206:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3206:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3206:25:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 799,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3156:76:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 765,
															"id": 800,
															"nodeType": "Return",
															"src": "3149:83:5"
														}
													]
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "2606:637:5",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "2634:495:5",
													"statements": [
														{
															"assignments": [
																771
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 771,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2656:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 787,
																	"src": "2648:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 770,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2648:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 772,
															"nodeType": "VariableDeclarationStatement",
															"src": "2648:9:5"
														},
														{
															"assignments": [
																774
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 774,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2679:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 787,
																	"src": "2671:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 773,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2671:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 775,
															"nodeType": "VariableDeclarationStatement",
															"src": "2671:9:5"
														},
														{
															"assignments": [
																777
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 777,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2700:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 787,
																	"src": "2694:7:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2694:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 778,
															"nodeType": "VariableDeclarationStatement",
															"src": "2694:7:5"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2902:171:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2920:32:5",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2935:9:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2946:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2931:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2931:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2925:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2925:27:5"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2920:1:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2969:32:5",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2984:9:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2995:4:5",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2980:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2980:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2974:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2974:27:5"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2969:1:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3018:41:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3028:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "3041:9:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3052:4:5",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3037:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3037:20:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3031:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3031:27:5"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "3023:4:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3023:36:5"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "3018:1:5"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 771,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2920:1:5",
																	"valueSize": 1
																},
																{
																	"declaration": 774,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2969:1:5",
																	"valueSize": 1
																},
																{
																	"declaration": 756,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2935:9:5",
																	"valueSize": 1
																},
																{
																	"declaration": 756,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2984:9:5",
																	"valueSize": 1
																},
																{
																	"declaration": 756,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3041:9:5",
																	"valueSize": 1
																},
																{
																	"declaration": 777,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3018:1:5",
																	"valueSize": 1
																}
															],
															"id": 779,
															"nodeType": "InlineAssembly",
															"src": "2893:180:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "3104:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 782,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "3110:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 783,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "3113:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 784,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "3116:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 780,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		804,
																		884,
																		992
																	],
																	"referencedDeclaration": 992,
																	"src": "3093:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3093:25:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 765,
															"id": 786,
															"nodeType": "Return",
															"src": "3086:32:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1421:1057:5",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2492:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2511:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2503:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2530:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2517:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2517:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2502:38:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2573:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$690",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "RecoverError",
														"nameLocations": [
															"2573:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "2573:12:5"
													},
													"referencedDeclaration": 690,
													"src": "2573:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$690",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2587:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:32:5"
									},
									"scope": 1093,
									"src": "2483:766:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "4126:168:5",
										"statements": [
											{
												"assignments": [
													815,
													818,
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4145:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "4137:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 814,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4137:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4169:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "4156:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 817,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 816,
																"name": "RecoverError",
																"nameLocations": [
																	"4156:12:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 690,
																"src": "4156:12:5"
															},
															"referencedDeclaration": 690,
															"src": "4156:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4184:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "4176:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 819,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4176:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 822,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4207:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 823,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "4213:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 821,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															804,
															884,
															992
														],
														"referencedDeclaration": 804,
														"src": "4196:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4136:87:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4245:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 828,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "4252:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 826,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "4233:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$690_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4233:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "4233:28:5"
											},
											{
												"expression": {
													"id": 831,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 815,
													"src": "4278:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 813,
												"id": 832,
												"nodeType": "Return",
												"src": "4271:16:5"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "3255:779:5",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4048:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4064:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "4056:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4083:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "4070:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4070:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4055:38:5"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "4117:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:9:5"
									},
									"scope": 1093,
									"src": "4039:255:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "4660:342:5",
										"statements": [
											{
												"id": 882,
												"nodeType": "UncheckedBlock",
												"src": "4670:326:5",
												"statements": [
													{
														"assignments": [
															852
														],
														"declarations": [
															{
																"constant": false,
																"id": 852,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4702:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 882,
																"src": "4694:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 851,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4694:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 859,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "4706:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4719:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4711:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4711:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4711:75:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4706:80:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4694:92:5"
													},
													{
														"assignments": [
															861
														],
														"declarations": [
															{
																"constant": false,
																"id": 861,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4903:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 882,
																"src": "4897:7:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 860,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4897:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 874,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 866,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 841,
																							"src": "4922:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4914:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 864,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4914:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4914:11:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4929:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4914:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 870,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4913:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4936:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4913:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4907:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 862,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4907:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4907:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4897:42:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "4971:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 877,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "4977:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 878,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "4980:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 879,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "4983:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 875,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	804,
																	884,
																	992
																],
																"referencedDeclaration": 992,
																"src": "4960:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4960:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 850,
														"id": 881,
														"nodeType": "Return",
														"src": "4953:32:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "4300:243:5",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4557:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4576:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4568:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 836,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4590:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4582:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4582:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4601:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4593:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4567:37:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4628:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4637:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$690",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 845,
														"name": "RecoverError",
														"nameLocations": [
															"4637:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "4637:12:5"
													},
													"referencedDeclaration": 690,
													"src": "4637:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$690",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4651:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:32:5"
									},
									"scope": 1093,
									"src": "4548:454:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "5253:164:5",
										"statements": [
											{
												"assignments": [
													897,
													900,
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "5272:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "5264:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 896,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5264:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "5296:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "5283:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 899,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 898,
																"name": "RecoverError",
																"nameLocations": [
																	"5283:12:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 690,
																"src": "5283:12:5"
															},
															"referencedDeclaration": 690,
															"src": "5283:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "5311:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "5303:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 901,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5303:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"arguments": [
														{
															"id": 904,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "5334:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 905,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5340:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 906,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5343:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 903,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															804,
															884,
															992
														],
														"referencedDeclaration": 884,
														"src": "5323:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5323:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5263:83:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "5368:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 911,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5375:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 909,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5356:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$690_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "5356:28:5"
											},
											{
												"expression": {
													"id": 914,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 897,
													"src": "5401:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 895,
												"id": 915,
												"nodeType": "Return",
												"src": "5394:16:5"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "5008:154:5",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "5176:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5192:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5184:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5206:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5198:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 888,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5198:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "5217:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5209:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5183:37:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5244:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:9:5"
									},
									"scope": 1093,
									"src": "5167:250:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "5749:1372:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 938,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "6645:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 936,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6637:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6637:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6650:66:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6637:79:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "6633:164:5",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "6718:79:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6748:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6740:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 942,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6740:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6740:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 946,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "6752:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6765:17:5",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "6752:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$690",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 948,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "6784:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6739:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 935,
															"id": 950,
															"nodeType": "Return",
															"src": "6732:54:5"
														}
													]
												}
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6899:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "6891:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 953,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6891:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 956,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "6918:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 957,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "6924:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 958,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6927:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 959,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6930:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 955,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6908:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6908:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6891:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "6946:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6964:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6956:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 963,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6956:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6956:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6946:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "6942:113:5",
												"trueBody": {
													"id": 980,
													"nodeType": "Block",
													"src": "6968:87:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6998:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6990:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6990:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6990:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 972,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "7002:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "7015:16:5",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 687,
																		"src": "7002:29:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$690",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7041:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7033:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 974,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "7033:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7033:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 978,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6989:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 935,
															"id": 979,
															"nodeType": "Return",
															"src": "6982:62:5"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 982,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "7073:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 983,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "7081:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7094:7:5",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "7081:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7103:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 985,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7103:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7103:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 989,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7072:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 935,
												"id": 990,
												"nodeType": "Return",
												"src": "7065:49:5"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "5423:163:5",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5600:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5628:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5620:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5648:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5642:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 921,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5642:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5667:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5659:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5659:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5686:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5678:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 925,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:83:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5717:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5726:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$690",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 930,
														"name": "RecoverError",
														"nameLocations": [
															"5726:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "5726:12:5"
													},
													"referencedDeclaration": 690,
													"src": "5726:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$690",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5740:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:32:5"
									},
									"scope": 1093,
									"src": "5591:1530:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "7348:166:5",
										"statements": [
											{
												"assignments": [
													1007,
													1010,
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7367:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "7359:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1006,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7359:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7391:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "7378:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1009,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1008,
																"name": "RecoverError",
																"nameLocations": [
																	"7378:12:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 690,
																"src": "7378:12:5"
															},
															"referencedDeclaration": 690,
															"src": "7378:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7406:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "7398:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1011,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7398:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [
														{
															"id": 1014,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7429:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1015,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7435:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1016,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7438:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1017,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "7441:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1013,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															804,
															884,
															992
														],
														"referencedDeclaration": 992,
														"src": "7418:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7418:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7358:85:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "7465:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1022,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "7472:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1020,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "7453:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$690_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7453:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "7453:28:5"
											},
											{
												"expression": {
													"id": 1025,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1007,
													"src": "7498:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1026,
												"nodeType": "Return",
												"src": "7491:16:5"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "7127:122:5",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "7263:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7279:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7271:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 994,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "7291:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 996,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7285:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "7302:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7294:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 998,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7294:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7313:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7305:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1000,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7270:45:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7339:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7338:9:5"
									},
									"scope": 1093,
									"src": "7254:260:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "7890:310:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8046:148:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8067:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8073:34:5",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8060:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8060:48:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8128:4:5",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "8134:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8121:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8121:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8121:18:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8152:32:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8173:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8179:4:5",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8163:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8163:21:5"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nodeType": "YulIdentifier",
																	"src": "8152:7:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1031,
														"isOffset": false,
														"isSlot": false,
														"src": "8134:4:5",
														"valueSize": 1
													},
													{
														"declaration": 1034,
														"isOffset": false,
														"isSlot": false,
														"src": "8152:7:5",
														"valueSize": 1
													}
												],
												"id": 1036,
												"nodeType": "InlineAssembly",
												"src": "8037:157:5"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "7520:279:5",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7813:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7844:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "7836:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7835:14:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7881:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "7873:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7872:17:5"
									},
									"scope": 1093,
									"src": "7804:396:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "8565:116:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1052,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "8660:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8662:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8660:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1050,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "8643:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$681_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8651:8:5",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "8643:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8643:26:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1055,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "8671:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1047,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8592:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8596:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8592:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8592:81:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1046,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8582:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8582:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1058,
												"nodeType": "Return",
												"src": "8575:99:5"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "8206:274:5",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "8494:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8530:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "8517:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8517:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8516:16:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "8556:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8556:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8555:9:5"
									},
									"scope": 1093,
									"src": "8485:196:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "9127:290:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9189:222:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9203:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9220:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9214:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:11:5"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "9207:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9245:3:5"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9250:10:5",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9238:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9238:23:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9238:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9285:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9290:4:5",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9281:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9281:14:5"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "9297:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9274:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9274:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9274:39:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9337:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9342:4:5",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9333:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9333:14:5"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "9349:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9326:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9326:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9373:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9391:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9396:4:5",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9381:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9381:20:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9373:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "9373:4:5",
														"valueSize": 1
													},
													{
														"declaration": 1063,
														"isOffset": false,
														"isSlot": false,
														"src": "9297:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1065,
														"isOffset": false,
														"isSlot": false,
														"src": "9349:10:5",
														"valueSize": 1
													}
												],
												"id": 1070,
												"nodeType": "InlineAssembly",
												"src": "9180:231:5"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "8687:328:5",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "9029:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "9053:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9045:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "9078:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9070:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9044:45:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9121:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9113:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9113:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9112:14:5"
									},
									"scope": 1093,
									"src": "9020:397:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "9732:80:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9776:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1086,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "9788:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1087,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "9799:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1083,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9759:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9763:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9759:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9759:45:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1082,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9749:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9749:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1090,
												"nodeType": "Return",
												"src": "9742:63:5"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "9423:193:5",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "9630:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "9670:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "9662:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9662:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9694:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "9681:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9681:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9661:38:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "9723:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9722:9:5"
									},
									"scope": 1093,
									"src": "9621:191:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1094,
							"src": "370:9444:5",
							"usedErrors": [
								693,
								698,
								703
							],
							"usedEvents": []
						}
					],
					"src": "112:9703:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol",
					"exportedSymbols": {
						"ECDSA": [
							1093
						],
						"IERC1271": [
							312
						],
						"Math": [
							2241
						],
						"SignatureChecker": [
							1192
						],
						"SignedMath": [
							2346
						],
						"Strings": [
							681
						]
					},
					"id": 1193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1095,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1096,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1193,
							"sourceUnit": 1094,
							"src": "149:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1271.sol",
							"file": "../../interfaces/IERC1271.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1193,
							"sourceUnit": 313,
							"src": "171:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "212:294:6",
								"text": " @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 1192,
							"linearizedBaseContracts": [
								1192
							],
							"name": "SignatureChecker",
							"nameLocation": "515:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "1127:256:6",
										"statements": [
											{
												"assignments": [
													1111,
													1114,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1146:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "1138:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1110,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1138:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "1176:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "1157:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$690",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1112,
																"name": "ECDSA.RecoverError",
																"nameLocations": [
																	"1157:5:6",
																	"1163:12:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 690,
																"src": "1157:18:6"
															},
															"referencedDeclaration": 690,
															"src": "1157:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$690",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1120,
												"initialValue": {
													"arguments": [
														{
															"id": 1117,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1204:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1118,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "1210:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1115,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "1187:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1093_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1193:10:6",
														"memberName": "tryRecover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "1187:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$690_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:83:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$690",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1121,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "1250:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$690",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 1122,
																				"name": "ECDSA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "1259:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ECDSA_$1093_$",
																					"typeString": "type(library ECDSA)"
																				}
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1265:12:6",
																			"memberName": "RecoverError",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "1259:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$690_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1278:7:6",
																		"memberName": "NoError",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 686,
																		"src": "1259:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$690",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "1250:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1126,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "1289:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1127,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "1302:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1289:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1250:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1249:60:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1132,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "1352:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1133,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1360:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1134,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "1366:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1131,
															"name": "isValidERC1271SignatureNow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "1325:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1325:51:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1249:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1137,
												"nodeType": "Return",
												"src": "1230:146:6"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "538:472:6",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignatureNow",
									"nameLocation": "1024:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1052:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1044:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1068:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1060:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1087:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1074:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1074:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:54:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1121:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1121:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:6:6"
									},
									"scope": 1192,
									"src": "1015:368:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "1938:309:6",
										"statements": [
											{
												"assignments": [
													1152,
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1954:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "1949:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1151,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1949:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1976:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "1963:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1153,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1963:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1159,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "2032:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$312_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2041:16:6",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "2032:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1161,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "2060:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1162,
																			"name": "signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "2066:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"id": 1163,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2059:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																],
																"expression": {
																	"id": 1157,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2017:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:60:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1155,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "1986:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1993:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1986:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:101:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:139:6"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "2105:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "2128:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2135:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2128:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2145:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "2128:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2105:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "2174:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2183:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1176,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "2183:7:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1178,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2182:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		],
																		"expression": {
																			"id": 1173,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2163:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2167:6:6",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "2163:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2163:29:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1182,
																					"name": "IERC1271",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 312,
																					"src": "2204:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1271_$312_$",
																						"typeString": "type(contract IERC1271)"
																					}
																				},
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2213:16:6",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 311,
																				"src": "2204:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																				}
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2230:8:6",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2204:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2196:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 1180,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2196:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2196:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2163:76:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2105:134:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1188,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2104:136:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1189,
												"nodeType": "Return",
												"src": "2097:143:6"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1389:395:6",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271SignatureNow",
									"nameLocation": "1798:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1842:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1834:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1866:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1858:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1893:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1880:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1880:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:84:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1932:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:6:6"
									},
									"scope": 1192,
									"src": "1789:458:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1193,
							"src": "507:1742:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2127:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1204
						]
					},
					"id": 1205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1194,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1195,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1204,
							"linearizedBaseContracts": [
								1204
							],
							"name": "IERC165",
							"nameLocation": "416:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "802:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "845:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:7"
									},
									"scope": 1204,
									"src": "775:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1205,
							"src": "406:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:754:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2241
						]
					},
					"id": 2242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1207,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2241,
							"linearizedBaseContracts": [
								2241
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:8",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1210,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:8"
									},
									"src": "277:29:8"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1214,
									"members": [
										{
											"id": 1211,
											"name": "Down",
											"nameLocation": "336:4:8",
											"nodeType": "EnumValue",
											"src": "336:4:8"
										},
										{
											"id": 1212,
											"name": "Up",
											"nameLocation": "378:2:8",
											"nodeType": "EnumValue",
											"src": "378:2:8"
										},
										{
											"id": 1213,
											"name": "Zero",
											"nameLocation": "409:4:8",
											"nodeType": "EnumValue",
											"src": "409:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:8",
									"nodeType": "EnumDefinition",
									"src": "312:122:8"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "652:140:8",
										"statements": [
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "662:124:8",
												"statements": [
													{
														"assignments": [
															1227
														],
														"declarations": [
															{
																"constant": false,
																"id": 1227,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "694:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1244,
																"src": "686:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "686:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1231,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1228,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "698:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "702:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "698:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "686:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "721:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1233,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "725:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "721:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1239,
														"nodeType": "IfStatement",
														"src": "717:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "736:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "743:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "735:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1225,
															"id": 1238,
															"nodeType": "Return",
															"src": "728:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "767:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1241,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "773:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "766:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1225,
														"id": 1243,
														"nodeType": "Return",
														"src": "759:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "440:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "585:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "600:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "592:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "611:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "603:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:22:8"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "637:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "643:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:15:8"
									},
									"scope": 2241,
									"src": "576:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "1013:113:8",
										"statements": [
											{
												"id": 1272,
												"nodeType": "UncheckedBlock",
												"src": "1023:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "1051:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "1055:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1051:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1265,
														"nodeType": "IfStatement",
														"src": "1047:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1066:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1073:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1065:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1257,
															"id": 1264,
															"nodeType": "Return",
															"src": "1058:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1097:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1267,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "1103:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1268,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "1107:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1103:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1270,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1096:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1257,
														"id": 1271,
														"nodeType": "Return",
														"src": "1089:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "798:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "953:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "964:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "998:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "1004:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:15:8"
									},
									"scope": 2241,
									"src": "937:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "1350:417:8",
										"statements": [
											{
												"id": 1314,
												"nodeType": "UncheckedBlock",
												"src": "1360:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1618:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1623:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1618:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "1614:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1634:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1640:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1633:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1285,
															"id": 1292,
															"nodeType": "Return",
															"src": "1626:16:8"
														}
													},
													{
														"assignments": [
															1295
														],
														"declarations": [
															{
																"constant": false,
																"id": 1295,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1664:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1314,
																"src": "1656:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1656:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1299,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1668:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1297,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1672:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1668:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1656:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "1691:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1301,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "1695:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1691:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1700:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1691:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1309,
														"nodeType": "IfStatement",
														"src": "1687:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1711:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1710:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1285,
															"id": 1308,
															"nodeType": "Return",
															"src": "1703:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1742:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1311,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "1748:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1741:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1285,
														"id": 1313,
														"nodeType": "Return",
														"src": "1734:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "1132:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1283:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1298:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1290:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1309:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1301:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:22:8"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1335:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1341:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:15:8"
									},
									"scope": 2241,
									"src": "1274:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "1992:114:8",
										"statements": [
											{
												"id": 1342,
												"nodeType": "UncheckedBlock",
												"src": "2002:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1328,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "2030:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2035:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2030:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1335,
														"nodeType": "IfStatement",
														"src": "2026:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2046:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2053:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2045:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1327,
															"id": 1334,
															"nodeType": "Return",
															"src": "2038:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2077:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1337,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "2083:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1338,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "2087:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2083:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1340,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2076:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1327,
														"id": 1341,
														"nodeType": "Return",
														"src": "2069:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "1773:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1925:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1940:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1932:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1951:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1943:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:22:8"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1977:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1977:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1983:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1976:15:8"
									},
									"scope": 2241,
									"src": "1916:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "2341:114:8",
										"statements": [
											{
												"id": 1370,
												"nodeType": "UncheckedBlock",
												"src": "2351:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "2379:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2384:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2379:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "2375:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2402:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2394:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1355,
															"id": 1362,
															"nodeType": "Return",
															"src": "2387:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2426:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1365,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "2432:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1366,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "2436:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2432:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1368,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2425:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1355,
														"id": 1369,
														"nodeType": "Return",
														"src": "2418:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2112:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2274:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2289:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2281:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2300:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2292:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:22:8"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2326:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2326:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2332:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:15:8"
									},
									"scope": 2241,
									"src": "2265:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "2592:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "2609:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1383,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "2613:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2609:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1386,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "2621:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2609:13:8",
													"trueExpression": {
														"id": 1385,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2617:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1388,
												"nodeType": "Return",
												"src": "2602:20:8"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "2461:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2534:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2546:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2538:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2557:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2549:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:22:8"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2583:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:9:8"
									},
									"scope": 2241,
									"src": "2525:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "2767:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2784:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "2788:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2784:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "2796:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2784:13:8",
													"trueExpression": {
														"id": 1403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2792:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1406,
												"nodeType": "Return",
												"src": "2777:20:8"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "2635:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2709:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2721:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2713:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2732:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2724:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:22:8"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2758:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:9:8"
									},
									"scope": 2241,
									"src": "2700:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "2988:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "3043:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1419,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "3047:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3043:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3042:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1422,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "3053:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1423,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "3057:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3053:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1425,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3052:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3062:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3052:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3042:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1429,
												"nodeType": "Return",
												"src": "3035:28:8"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "2810:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2926:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2942:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2934:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2953:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2945:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2933:22:8"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2978:9:8"
									},
									"scope": 2241,
									"src": "2917:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "3340:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "3354:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3359:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3354:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "IfStatement",
												"src": "3350:127:8",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "3362:115:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1444,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "3461:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1445,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "3465:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3461:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1440,
															"id": 1447,
															"nodeType": "Return",
															"src": "3454:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1450,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "3565:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3570:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3565:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1454,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1434,
																			"src": "3579:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3583:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3579:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1457,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3578:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "3588:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3578:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3592:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3578:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3565:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3574:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1463,
												"nodeType": "Return",
												"src": "3558:35:8"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "3076:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3278:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3294:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "3286:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3305:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "3297:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:22:8"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "3331:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3331:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:9:8"
									},
									"scope": 2241,
									"src": "3269:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "4014:4149:8",
										"statements": [
											{
												"id": 1587,
												"nodeType": "UncheckedBlock",
												"src": "4024:4133:8",
												"statements": [
													{
														"assignments": [
															1478
														],
														"declarations": [
															{
																"constant": false,
																"id": 1478,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4353:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "4345:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1477,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1479,
														"nodeType": "VariableDeclarationStatement",
														"src": "4345:13:8"
													},
													{
														"assignments": [
															1481
														],
														"declarations": [
															{
																"constant": false,
																"id": 1481,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4425:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "4417:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1480,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4417:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1482,
														"nodeType": "VariableDeclarationStatement",
														"src": "4417:13:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4497:157:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4515:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4532:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4535:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4542:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4538:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4538:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4525:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4519:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4562:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4575:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4578:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4562:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4597:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4614:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4618:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4610:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4610:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4629:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4633:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4626:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4626:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4606:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4606:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4597:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4562:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4618:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4633:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1481,
																"isOffset": false,
																"isSlot": false,
																"src": "4597:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1468,
																"isOffset": false,
																"isSlot": false,
																"src": "4532:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1468,
																"isOffset": false,
																"isSlot": false,
																"src": "4575:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1470,
																"isOffset": false,
																"isSlot": false,
																"src": "4535:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1470,
																"isOffset": false,
																"isSlot": false,
																"src": "4578:1:8",
																"valueSize": 1
															}
														],
														"id": 1483,
														"nodeType": "InlineAssembly",
														"src": "4488:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "4735:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4744:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4735:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1492,
														"nodeType": "IfStatement",
														"src": "4731:368:8",
														"trueBody": {
															"id": 1491,
															"nodeType": "Block",
															"src": "4747:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1487,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "5065:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1488,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "5073:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5065:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1476,
																	"id": 1490,
																	"nodeType": "Return",
																	"src": "5058:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1493,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "5205:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1494,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "5220:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5205:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1500,
														"nodeType": "IfStatement",
														"src": "5201:88:8",
														"trueBody": {
															"id": 1499,
															"nodeType": "Block",
															"src": "5227:62:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1496,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "5252:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5252:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1498,
																	"nodeType": "RevertStatement",
																	"src": "5245:29:8"
																}
															]
														}
													},
													{
														"assignments": [
															1502
														],
														"declarations": [
															{
																"constant": false,
																"id": 1502,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5552:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "5544:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5544:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1503,
														"nodeType": "VariableDeclarationStatement",
														"src": "5544:17:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5584:291:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5673:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5676:1:8"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5679:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5666:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5653:9:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5773:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5786:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5796:9:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5807:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5793:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5793:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5782:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5773:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5831:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5844:5:8"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5851:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5840:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5831:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "5807:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "5831:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "5844:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1481,
																"isOffset": false,
																"isSlot": false,
																"src": "5773:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1481,
																"isOffset": false,
																"isSlot": false,
																"src": "5786:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1502,
																"isOffset": false,
																"isSlot": false,
																"src": "5653:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1502,
																"isOffset": false,
																"isSlot": false,
																"src": "5796:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1502,
																"isOffset": false,
																"isSlot": false,
																"src": "5851:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1468,
																"isOffset": false,
																"isSlot": false,
																"src": "5673:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1470,
																"isOffset": false,
																"isSlot": false,
																"src": "5676:1:8",
																"valueSize": 1
															}
														],
														"id": 1504,
														"nodeType": "InlineAssembly",
														"src": "5575:300:8"
													},
													{
														"assignments": [
															1506
														],
														"declarations": [
															{
																"constant": false,
																"id": 1506,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6190:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "6182:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1505,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6182:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "6197:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "6212:12:8",
																			"subExpression": {
																				"id": 1508,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "6213:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6227:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6212:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6211:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6197:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6182:47:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6252:362:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6336:11:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6349:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6332:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6317:11:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6421:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6434:5:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6441:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6430:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6421:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6561:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6581:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6584:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6577:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6577:12:8"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6591:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6573:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6573:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6598:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6569:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6569:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6561:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "6336:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "6421:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "6434:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "6349:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "6441:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "6561:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "6584:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "6591:4:8",
																"valueSize": 1
															}
														],
														"id": 1515,
														"nodeType": "InlineAssembly",
														"src": "6243:371:8"
													},
													{
														"expression": {
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1516,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "6680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1517,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "6689:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1518,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "6697:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6689:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6680:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1521,
														"nodeType": "ExpressionStatement",
														"src": "6680:21:8"
													},
													{
														"assignments": [
															1523
														],
														"declarations": [
															{
																"constant": false,
																"id": 1523,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "7027:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "7019:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7019:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1530,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7038:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1525,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "7042:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7038:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7037:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7057:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7037:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7019:39:8"
													},
													{
														"expression": {
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1531,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7275:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7286:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1533,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7290:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1534,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7304:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7290:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7286:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7275:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1538,
														"nodeType": "ExpressionStatement",
														"src": "7275:36:8"
													},
													{
														"expression": {
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1539,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7344:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1541,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7359:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1542,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7373:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7359:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7355:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7344:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1546,
														"nodeType": "ExpressionStatement",
														"src": "7344:36:8"
													},
													{
														"expression": {
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1547,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7414:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7425:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1549,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7429:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1550,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7443:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7429:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7425:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7414:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1554,
														"nodeType": "ExpressionStatement",
														"src": "7414:36:8"
													},
													{
														"expression": {
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1555,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7484:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7495:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1557,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7499:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1558,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7513:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7499:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7495:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7484:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1562,
														"nodeType": "ExpressionStatement",
														"src": "7484:36:8"
													},
													{
														"expression": {
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1563,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7554:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7565:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1565,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7569:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1566,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7583:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7569:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7565:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7554:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1570,
														"nodeType": "ExpressionStatement",
														"src": "7554:36:8"
													},
													{
														"expression": {
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1571,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7625:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7636:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1573,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "7640:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1574,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "7654:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7640:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7636:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7625:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1578,
														"nodeType": "ExpressionStatement",
														"src": "7625:36:8"
													},
													{
														"expression": {
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1579,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "8095:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1580,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "8104:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1581,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "8112:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8104:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8095:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1584,
														"nodeType": "ExpressionStatement",
														"src": "8095:24:8"
													},
													{
														"expression": {
															"id": 1585,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "8140:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1476,
														"id": 1586,
														"nodeType": "Return",
														"src": "8133:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "3606:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3925:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3940:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3932:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3951:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3943:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3962:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3954:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:43:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4006:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3998:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:16:8"
									},
									"scope": 2241,
									"src": "3916:4247:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "8405:189:8",
										"statements": [
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8423:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "8415:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8415:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "8439:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1608,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "8442:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1609,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8445:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1606,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1589,
															1633
														],
														"referencedDeclaration": 1589,
														"src": "8432:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8432:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8415:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1214",
															"typeString": "enum Math.Rounding"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1612,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "8471:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1214",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1613,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "8483:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1214_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8492:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1212,
															"src": "8483:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1214",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8471:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1617,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "8505:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1618,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "8508:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1619,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "8511:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1616,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8498:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8498:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8526:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8498:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8471:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1629,
												"nodeType": "IfStatement",
												"src": "8467:98:8",
												"trueBody": {
													"id": 1628,
													"nodeType": "Block",
													"src": "8529:36:8",
													"statements": [
														{
															"expression": {
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1624,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "8543:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8553:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8543:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1627,
															"nodeType": "ExpressionStatement",
															"src": "8543:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1630,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1605,
													"src": "8581:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1631,
												"nodeType": "Return",
												"src": "8574:13:8"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "8169:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8304:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8319:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8311:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8330:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8322:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8322:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8341:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8333:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8333:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8363:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8354:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1597,
														"name": "Rounding",
														"nameLocations": [
															"8354:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "8354:8:8"
													},
													"referencedDeclaration": 1214,
													"src": "8354:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8310:62:8"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8395:9:8"
									},
									"scope": 2241,
									"src": "8295:299:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "8870:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "8884:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8889:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8884:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1647,
												"nodeType": "IfStatement",
												"src": "8880:45:8",
												"trueBody": {
													"id": 1646,
													"nodeType": "Block",
													"src": "8892:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8913:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1640,
															"id": 1645,
															"nodeType": "Return",
															"src": "8906:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9612:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "9604:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9604:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9621:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1652,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "9632:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1651,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1913,
																			1949
																		],
																		"referencedDeclaration": 1913,
																		"src": "9627:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9627:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9638:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9627:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1656,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9626:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9621:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9604:36:8"
											},
											{
												"id": 1743,
												"nodeType": "UncheckedBlock",
												"src": "10041:408:8",
												"statements": [
													{
														"expression": {
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1659,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10065:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1660,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10075:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1661,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10084:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1662,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10088:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10084:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10075:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10074:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10074:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10065:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1669,
														"nodeType": "ExpressionStatement",
														"src": "10065:35:8"
													},
													{
														"expression": {
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1670,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10114:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1671,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10124:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1672,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10133:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1673,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10137:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10133:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10124:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1676,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10123:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10148:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10123:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10114:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1680,
														"nodeType": "ExpressionStatement",
														"src": "10114:35:8"
													},
													{
														"expression": {
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1681,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10163:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1682,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10173:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1683,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10182:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1684,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10186:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10182:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10173:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1687,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10172:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10197:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10172:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10163:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1691,
														"nodeType": "ExpressionStatement",
														"src": "10163:35:8"
													},
													{
														"expression": {
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10212:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1693,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10222:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1694,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10231:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1695,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10235:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10231:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10222:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10221:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10246:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10221:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10212:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1702,
														"nodeType": "ExpressionStatement",
														"src": "10212:35:8"
													},
													{
														"expression": {
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1703,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10261:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1704,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10271:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1705,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10280:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1706,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10284:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10280:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10271:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1709,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10270:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10295:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10270:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10261:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1713,
														"nodeType": "ExpressionStatement",
														"src": "10261:35:8"
													},
													{
														"expression": {
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1714,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10310:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1715,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10320:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1716,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10329:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1717,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10333:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10329:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10320:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1720,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10319:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10344:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10319:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10310:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1724,
														"nodeType": "ExpressionStatement",
														"src": "10310:35:8"
													},
													{
														"expression": {
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1725,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "10359:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1726,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "10369:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1727,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "10378:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1728,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "10382:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10378:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10369:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10368:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10393:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10368:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1735,
														"nodeType": "ExpressionStatement",
														"src": "10359:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1737,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "10419:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1738,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "10427:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1739,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "10431:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10427:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1736,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "10415:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10415:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1640,
														"id": 1742,
														"nodeType": "Return",
														"src": "10408:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "8600:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8822:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8835:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8827:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8826:11:8"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8861:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8860:9:8"
									},
									"scope": 2241,
									"src": "8813:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "10631:161:8",
										"statements": [
											{
												"id": 1779,
												"nodeType": "UncheckedBlock",
												"src": "10641:145:8",
												"statements": [
													{
														"assignments": [
															1757
														],
														"declarations": [
															{
																"constant": false,
																"id": 1757,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10673:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1779,
																"src": "10665:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10665:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1761,
														"initialValue": {
															"arguments": [
																{
																	"id": 1759,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "10687:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1758,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1745,
																	1781
																],
																"referencedDeclaration": 1745,
																"src": "10682:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10682:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10665:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "10710:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1214",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1763,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1751,
																					"src": "10720:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1764,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "10732:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1214_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1765,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10741:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1212,
																					"src": "10732:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10720:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1767,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1757,
																						"src": "10747:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1768,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1757,
																						"src": "10756:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10747:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1770,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1748,
																					"src": "10765:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10747:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10720:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10773:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10720:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10769:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1776,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10719:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10710:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1755,
														"id": 1778,
														"nodeType": "Return",
														"src": "10703:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "10461:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10564:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10577:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10569:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10569:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10589:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10580:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1749,
														"name": "Rounding",
														"nameLocations": [
															"10580:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "10580:8:8"
													},
													"referencedDeclaration": 1214,
													"src": "10580:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10568:30:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "10622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10621:9:8"
									},
									"scope": 2241,
									"src": "10555:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "10977:922:8",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10995:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1912,
														"src": "10987:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10987:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"hexValue": "30",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11004:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10987:18:8"
											},
											{
												"id": 1909,
												"nodeType": "UncheckedBlock",
												"src": "11015:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1793,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11043:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11052:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11043:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11058:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11043:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1807,
														"nodeType": "IfStatement",
														"src": "11039:99:8",
														"trueBody": {
															"id": 1806,
															"nodeType": "Block",
															"src": "11061:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11079:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11089:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11079:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1801,
																	"nodeType": "ExpressionStatement",
																	"src": "11079:13:8"
																},
																{
																	"expression": {
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1802,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11110:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11120:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11110:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1805,
																	"nodeType": "ExpressionStatement",
																	"src": "11110:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1808,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11155:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11164:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11155:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11169:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11155:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1822,
														"nodeType": "IfStatement",
														"src": "11151:96:8",
														"trueBody": {
															"id": 1821,
															"nodeType": "Block",
															"src": "11172:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1813,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11190:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11200:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11190:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1816,
																	"nodeType": "ExpressionStatement",
																	"src": "11190:12:8"
																},
																{
																	"expression": {
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1817,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11220:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11230:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11220:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1820,
																	"nodeType": "ExpressionStatement",
																	"src": "11220:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11264:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11264:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11264:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1837,
														"nodeType": "IfStatement",
														"src": "11260:96:8",
														"trueBody": {
															"id": 1836,
															"nodeType": "Block",
															"src": "11281:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1828,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11299:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11299:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1831,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:12:8"
																},
																{
																	"expression": {
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1832,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11329:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11339:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11329:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1835,
																	"nodeType": "ExpressionStatement",
																	"src": "11329:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1838,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11373:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11382:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11373:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11387:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11373:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1852,
														"nodeType": "IfStatement",
														"src": "11369:96:8",
														"trueBody": {
															"id": 1851,
															"nodeType": "Block",
															"src": "11390:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1843,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11408:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11418:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11408:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1846,
																	"nodeType": "ExpressionStatement",
																	"src": "11408:12:8"
																},
																{
																	"expression": {
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11438:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11448:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11438:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1850,
																	"nodeType": "ExpressionStatement",
																	"src": "11438:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11482:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11491:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11482:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11495:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11482:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "11478:93:8",
														"trueBody": {
															"id": 1866,
															"nodeType": "Block",
															"src": "11498:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11516:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11526:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11516:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1861,
																	"nodeType": "ExpressionStatement",
																	"src": "11516:11:8"
																},
																{
																	"expression": {
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11545:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11555:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11545:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1865,
																	"nodeType": "ExpressionStatement",
																	"src": "11545:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11588:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11597:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11588:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11588:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1882,
														"nodeType": "IfStatement",
														"src": "11584:93:8",
														"trueBody": {
															"id": 1881,
															"nodeType": "Block",
															"src": "11604:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11622:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11632:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11622:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1876,
																	"nodeType": "ExpressionStatement",
																	"src": "11622:11:8"
																},
																{
																	"expression": {
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11651:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11661:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11651:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1880,
																	"nodeType": "ExpressionStatement",
																	"src": "11651:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11694:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11703:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11694:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11707:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11694:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1897,
														"nodeType": "IfStatement",
														"src": "11690:93:8",
														"trueBody": {
															"id": 1896,
															"nodeType": "Block",
															"src": "11710:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "11728:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11738:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11728:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1891,
																	"nodeType": "ExpressionStatement",
																	"src": "11728:11:8"
																},
																{
																	"expression": {
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11757:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11767:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11757:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1895,
																	"nodeType": "ExpressionStatement",
																	"src": "11757:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "11800:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11809:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11800:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1908,
														"nodeType": "IfStatement",
														"src": "11796:64:8",
														"trueBody": {
															"id": 1907,
															"nodeType": "Block",
															"src": "11816:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1903,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11834:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11844:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11834:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1906,
																	"nodeType": "ExpressionStatement",
																	"src": "11834:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1910,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1790,
													"src": "11886:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1911,
												"nodeType": "Return",
												"src": "11879:13:8"
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "10798:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10925:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10938:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "10930:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10930:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10929:15:8"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "10968:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10968:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10967:9:8"
									},
									"scope": 2241,
									"src": "10916:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "12132:165:8",
										"statements": [
											{
												"id": 1947,
												"nodeType": "UncheckedBlock",
												"src": "12142:149:8",
												"statements": [
													{
														"assignments": [
															1925
														],
														"declarations": [
															{
																"constant": false,
																"id": 1925,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12174:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1947,
																"src": "12166:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12166:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1929,
														"initialValue": {
															"arguments": [
																{
																	"id": 1927,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "12188:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1926,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1913,
																	1949
																],
																"referencedDeclaration": 1913,
																"src": "12183:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12183:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12166:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "12215:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1214",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1931,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1919,
																					"src": "12225:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1932,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "12237:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1214_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12246:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1212,
																					"src": "12237:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12225:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12252:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1936,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1925,
																						"src": "12257:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12252:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1938,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1916,
																					"src": "12266:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12252:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12225:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12278:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12225:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12274:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12224:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12215:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1923,
														"id": 1946,
														"nodeType": "Return",
														"src": "12208:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "11905:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12061:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12074:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "12066:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12066:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12090:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "12081:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1917,
														"name": "Rounding",
														"nameLocations": [
															"12081:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "12081:8:8"
													},
													"referencedDeclaration": 1214,
													"src": "12081:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12065:34:8"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "12123:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12123:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12122:9:8"
									},
									"scope": 2241,
									"src": "12052:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "12484:854:8",
										"statements": [
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12502:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2077,
														"src": "12494:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12494:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"hexValue": "30",
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12511:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12494:18:8"
											},
											{
												"id": 2074,
												"nodeType": "UncheckedBlock",
												"src": "12522:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "12550:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12559:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12565:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12559:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12550:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1977,
														"nodeType": "IfStatement",
														"src": "12546:103:8",
														"trueBody": {
															"id": 1976,
															"nodeType": "Block",
															"src": "12569:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "12587:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12596:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12602:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12596:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12587:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1971,
																	"nodeType": "ExpressionStatement",
																	"src": "12587:17:8"
																},
																{
																	"expression": {
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1972,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "12622:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12632:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12622:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1975,
																	"nodeType": "ExpressionStatement",
																	"src": "12622:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1978,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "12666:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12675:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12681:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12675:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12666:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1994,
														"nodeType": "IfStatement",
														"src": "12662:103:8",
														"trueBody": {
															"id": 1993,
															"nodeType": "Block",
															"src": "12685:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "12703:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12712:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:8"
																},
																{
																	"expression": {
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "12738:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12748:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12738:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1992,
																	"nodeType": "ExpressionStatement",
																	"src": "12738:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1995,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "12782:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12791:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12797:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12791:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12782:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "12778:103:8",
														"trueBody": {
															"id": 2010,
															"nodeType": "Block",
															"src": "12801:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2000,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "12819:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12828:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12834:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12828:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12819:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "12819:17:8"
																},
																{
																	"expression": {
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2006,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "12854:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12864:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12854:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2009,
																	"nodeType": "ExpressionStatement",
																	"src": "12854:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "12898:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12907:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12913:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12907:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12898:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2028,
														"nodeType": "IfStatement",
														"src": "12894:100:8",
														"trueBody": {
															"id": 2027,
															"nodeType": "Block",
															"src": "12916:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "12934:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12943:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12949:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12943:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12934:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2022,
																	"nodeType": "ExpressionStatement",
																	"src": "12934:16:8"
																},
																{
																	"expression": {
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2023,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "12968:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12978:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12968:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2026,
																	"nodeType": "ExpressionStatement",
																	"src": "12968:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2029,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "13011:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13020:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13026:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13020:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13011:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "13007:100:8",
														"trueBody": {
															"id": 2044,
															"nodeType": "Block",
															"src": "13029:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2034,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "13047:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13056:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13062:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13056:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13047:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2039,
																	"nodeType": "ExpressionStatement",
																	"src": "13047:16:8"
																},
																{
																	"expression": {
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2040,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13081:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13091:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13081:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2043,
																	"nodeType": "ExpressionStatement",
																	"src": "13081:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2046,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "13124:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13133:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13139:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13133:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13124:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2062,
														"nodeType": "IfStatement",
														"src": "13120:100:8",
														"trueBody": {
															"id": 2061,
															"nodeType": "Block",
															"src": "13142:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "13160:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13169:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13175:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13169:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13160:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2056,
																	"nodeType": "ExpressionStatement",
																	"src": "13160:16:8"
																},
																{
																	"expression": {
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2057,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13194:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13204:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13194:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2060,
																	"nodeType": "ExpressionStatement",
																	"src": "13194:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2063,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "13237:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13246:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13252:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13246:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13237:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2073,
														"nodeType": "IfStatement",
														"src": "13233:66:8",
														"trueBody": {
															"id": 2072,
															"nodeType": "Block",
															"src": "13255:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2068,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13273:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13283:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13273:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2071,
																	"nodeType": "ExpressionStatement",
																	"src": "13273:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2075,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1958,
													"src": "13325:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1956,
												"id": 2076,
												"nodeType": "Return",
												"src": "13318:13:8"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "12303:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12431:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "12437:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12436:15:8"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "12475:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12474:9:8"
									},
									"scope": 2241,
									"src": "12422:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "13573:167:8",
										"statements": [
											{
												"id": 2112,
												"nodeType": "UncheckedBlock",
												"src": "13583:151:8",
												"statements": [
													{
														"assignments": [
															2090
														],
														"declarations": [
															{
																"constant": false,
																"id": 2090,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13615:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2112,
																"src": "13607:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2089,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13607:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2094,
														"initialValue": {
															"arguments": [
																{
																	"id": 2092,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "13630:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2091,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2078,
																	2114
																],
																"referencedDeclaration": 2078,
																"src": "13624:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13624:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13607:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2095,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "13657:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1214",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2096,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2084,
																					"src": "13667:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2097,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "13679:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1214_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13688:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1212,
																					"src": "13679:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13667:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13694:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2101,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2090,
																						"src": "13700:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13694:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2103,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2081,
																					"src": "13709:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13694:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13667:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13721:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13667:55:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13717:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13666:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13657:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2088,
														"id": 2111,
														"nodeType": "Return",
														"src": "13650:73:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "13344:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13501:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13515:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "13507:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13507:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13531:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "13522:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2083,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2082,
														"name": "Rounding",
														"nameLocations": [
															"13522:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "13522:8:8"
													},
													"referencedDeclaration": 1214,
													"src": "13522:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13506:34:8"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "13564:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13564:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13563:9:8"
									},
									"scope": 2241,
									"src": "13492:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "14054:600:8",
										"statements": [
											{
												"assignments": [
													2123
												],
												"declarations": [
													{
														"constant": false,
														"id": 2123,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14072:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "14064:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14064:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"hexValue": "30",
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14081:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14064:18:8"
											},
											{
												"id": 2197,
												"nodeType": "UncheckedBlock",
												"src": "14092:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2126,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "14120:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14129:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14120:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14135:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14120:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2140,
														"nodeType": "IfStatement",
														"src": "14116:98:8",
														"trueBody": {
															"id": 2139,
															"nodeType": "Block",
															"src": "14138:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2131,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "14156:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14166:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14156:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2134,
																	"nodeType": "ExpressionStatement",
																	"src": "14156:13:8"
																},
																{
																	"expression": {
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2135,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "14187:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14197:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14187:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2138,
																	"nodeType": "ExpressionStatement",
																	"src": "14187:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2141,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "14231:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14240:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14231:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14245:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14231:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2155,
														"nodeType": "IfStatement",
														"src": "14227:95:8",
														"trueBody": {
															"id": 2154,
															"nodeType": "Block",
															"src": "14248:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "14266:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14276:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14266:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2149,
																	"nodeType": "ExpressionStatement",
																	"src": "14266:12:8"
																},
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "14296:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14306:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14296:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "14296:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "14339:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14348:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14339:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14353:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14339:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2170,
														"nodeType": "IfStatement",
														"src": "14335:95:8",
														"trueBody": {
															"id": 2169,
															"nodeType": "Block",
															"src": "14356:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "14374:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14384:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14374:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2164,
																	"nodeType": "ExpressionStatement",
																	"src": "14374:12:8"
																},
																{
																	"expression": {
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2165,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "14404:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14414:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14404:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2168,
																	"nodeType": "ExpressionStatement",
																	"src": "14404:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2171,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "14447:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14456:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14447:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14461:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14447:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2185,
														"nodeType": "IfStatement",
														"src": "14443:95:8",
														"trueBody": {
															"id": 2184,
															"nodeType": "Block",
															"src": "14464:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2176,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "14482:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14492:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14482:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2179,
																	"nodeType": "ExpressionStatement",
																	"src": "14482:12:8"
																},
																{
																	"expression": {
																		"id": 2182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2180,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "14512:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14522:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14512:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2183,
																	"nodeType": "ExpressionStatement",
																	"src": "14512:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2186,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "14555:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14564:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14555:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14568:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14555:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "14551:64:8",
														"trueBody": {
															"id": 2195,
															"nodeType": "Block",
															"src": "14571:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "14589:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14589:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2194,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2198,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2123,
													"src": "14641:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2121,
												"id": 2199,
												"nodeType": "Return",
												"src": "14634:13:8"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "13746:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14000:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14015:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "14007:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14007:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14006:15:8"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "14045:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14044:9:8"
									},
									"scope": 2241,
									"src": "13991:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "14891:174:8",
										"statements": [
											{
												"id": 2238,
												"nodeType": "UncheckedBlock",
												"src": "14901:158:8",
												"statements": [
													{
														"assignments": [
															2213
														],
														"declarations": [
															{
																"constant": false,
																"id": 2213,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14933:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2238,
																"src": "14925:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2212,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14925:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2217,
														"initialValue": {
															"arguments": [
																{
																	"id": 2215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "14949:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2214,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2201,
																	2240
																],
																"referencedDeclaration": 2201,
																"src": "14942:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14942:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14925:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2218,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "14976:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1214",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2219,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "14986:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2220,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "14998:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1214_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2221,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "15007:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1212,
																					"src": "14998:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1214",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "14986:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2228,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2223,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15013:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2226,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2224,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2213,
																									"src": "15019:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2225,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15029:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15019:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2227,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15018:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15013:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2229,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2204,
																					"src": "15034:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15013:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14986:53:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15046:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14986:61:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15042:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14985:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14976:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2237,
														"nodeType": "Return",
														"src": "14969:79:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "14660:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14818:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14833:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14825:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14825:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14849:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14840:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2205,
														"name": "Rounding",
														"nameLocations": [
															"14840:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "14840:8:8"
													},
													"referencedDeclaration": 1214,
													"src": "14840:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14824:34:8"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14882:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14882:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14881:9:8"
									},
									"scope": 2241,
									"src": "14809:256:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2242,
							"src": "203:14864:8",
							"usedErrors": [
								1210
							],
							"usedEvents": []
						}
					],
					"src": "103:14965:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2346
						]
					},
					"id": 2347,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2346,
							"linearizedBaseContracts": [
								2346
							],
							"name": "SignedMath",
							"nameLocation": "224:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "376:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2254,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "393:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2255,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "397:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2258,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2249,
														"src": "405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:9",
													"trueExpression": {
														"id": 2257,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2247,
														"src": "401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2253,
												"id": 2260,
												"nodeType": "Return",
												"src": "386:20:9"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "325:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2246,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2248,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:9"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "368:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2251,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:9"
									},
									"scope": 2346,
									"src": "312:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "555:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2272,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2273,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "576:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "584:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:9",
													"trueExpression": {
														"id": 2275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2265,
														"src": "580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2271,
												"id": 2278,
												"nodeType": "Return",
												"src": "565:20:9"
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "504:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2266,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:9"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "547:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2269,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:9"
									},
									"scope": 2346,
									"src": "491:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "797:162:9",
										"statements": [
											{
												"assignments": [
													2291
												],
												"declarations": [
													{
														"constant": false,
														"id": 2291,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2323,
														"src": "859:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2290,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2293,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "875:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2295,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2296,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "882:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2297,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2285,
																				"src": "886:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2305,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2310,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2291,
																						"src": "931:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2308,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2306,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2315,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "945:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2316,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2285,
																				"src": "949:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2320,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2289,
												"id": 2322,
												"nodeType": "Return",
												"src": "904:48:9"
											}
										]
									},
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2282,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2284,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:9"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "789:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2287,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:9"
									},
									"scope": 2346,
									"src": "729:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "1103:158:9",
										"statements": [
											{
												"id": 2343,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2334,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2327,
																			"src": "1228:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:9",
																		"subExpression": {
																			"id": 2338,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2327,
																			"src": "1242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:9",
																	"trueExpression": {
																		"id": 2337,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "1237:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2331,
														"id": 2342,
														"nodeType": "Return",
														"src": "1213:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1061:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2326,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:9"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1094:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:9"
									},
									"scope": 2346,
									"src": "1048:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2347,
							"src": "216:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:9"
				},
				"id": 9
			},
			"https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol": {
				"ast": {
					"absolutePath": "https://github.com/erc6551/reference/blob/main/src/interfaces/IERC6551Account.sol",
					"exportedSymbols": {
						"IERC6551Account": [
							2397
						],
						"IERC6551AccountProxy": [
							2354
						]
					},
					"id": 2398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2348,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551AccountProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2354,
							"linearizedBaseContracts": [
								2354
							],
							"name": "IERC6551AccountProxy",
							"nameLocation": "67:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5c60da1b",
									"id": 2353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "103:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:2:10"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "143:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:10"
									},
									"scope": 2354,
									"src": "94:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2398,
							"src": "57:97:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551Account",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2355,
								"nodeType": "StructuredDocumentation",
								"src": "156:67:10",
								"text": "@dev the ERC-165 identifier for this interface is `0xeff4d378`"
							},
							"fullyImplemented": false,
							"id": 2397,
							"linearizedBaseContracts": [
								2397
							],
							"name": "IERC6551Account",
							"nameLocation": "233:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2",
									"id": 2363,
									"name": "TransactionExecuted",
									"nameLocation": "261:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "297:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "281:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "321:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "305:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "334:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "328:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "328:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:59:10"
									},
									"src": "255:85:10"
								},
								{
									"id": 2366,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:10"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:0:10"
									},
									"scope": 2397,
									"src": "346:27:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e5d4c49",
									"id": 2377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "388:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "417:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "409:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "437:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "429:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "467:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "452:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "452:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:78:10"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "504:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "504:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:14:10"
									},
									"scope": 2397,
									"src": "379:139:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc0c546a",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "533:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:10"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "609:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "601:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "638:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "630:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "673:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "665:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:103:10"
									},
									"scope": 2397,
									"src": "524:167:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 2391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "706:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "711:2:10"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "737:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:9:10"
									},
									"scope": 2397,
									"src": "697:49:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "affed0e0",
									"id": 2396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonce",
									"nameLocation": "761:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:2:10"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "792:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:9:10"
									},
									"scope": 2397,
									"src": "752:49:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2398,
							"src": "223:580:10",
							"usedErrors": [],
							"usedEvents": [
								2363
							]
						}
					],
					"src": "32:772:10"
				},
				"id": 10
			}
		}
	}
}